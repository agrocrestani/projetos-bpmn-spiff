<?xml version="1.0" encoding="UTF-8"?>
<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:spiffworkflow="http://spiffworkflow.org/bpmn/schema/1.0/core" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="Definitions_96f6665" targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="3.0.0-dev">
  <bpmn:process id="Process_gera_due_y29b60r" isExecutable="true">
    <bpmn:startEvent id="StartEvent_1">
      <bpmn:outgoing>Flow_17db3yp</bpmn:outgoing>
    </bpmn:startEvent>
    <bpmn:sequenceFlow id="Flow_17db3yp" sourceRef="StartEvent_1" targetRef="Activity_0qpzdpu" />
    <bpmn:endEvent id="EndEvent_1">
      <bpmn:extensionElements>
        <spiffworkflow:instructionsForEndUser>The process instance completed successfully.</spiffworkflow:instructionsForEndUser>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_19e22i2</bpmn:incoming>
    </bpmn:endEvent>
    <bpmn:sequenceFlow id="Flow_12pkbxb" sourceRef="Activity_0qpzdpu" targetRef="Activity_0rp2yix" />
    <bpmn:serviceTask id="Activity_0qpzdpu" name="Busca novas DUEs">
      <bpmn:extensionElements>
        <spiffworkflow:instructionsForEndUser>This is an example **Manual Task**. A **Manual Task** is designed to allow someone to complete a task outside of the system and then report back that it is complete. You can click the *Continue* button to proceed. When you are done running this process, you can edit the **Process Model** to include a:

 * **Script Task** - write a short snippet of python code to update some data
 *  **User Task** - generate a form that collects information from a user
 * **Service Task** - communicate with an external API to fetch or update some data.

You can also change the text you are reading here by updating the *Instructions* on this example manual task.</spiffworkflow:instructionsForEndUser>
        <spiffworkflow:preScript>schema = {
  "sql": """
      SELECT distinct 
          itens_averbados -&gt; 0 -&gt;&gt; 'numero_due' numero_due,
          itens_averbados -&gt; 0 -&gt;&gt; 'data_embarque' data_embarque,
          itens_averbados -&gt; 0 -&gt;&gt; 'data_averbacao' data_averbacao,
          itens_averbados -&gt; 0 -&gt;&gt; 'motivo_alteracao' motivo_alteracao,
          '1' as natureza,
          null as entidade,
          null as nro_declaracao,
          null as tipo_documento,
          null as tipo_conhecimento,
          null as data_declaracao,
          null as pais_destino
      FROM 
          sap.due_eventos
      where
          itens_averbados -&gt; 0 -&gt;&gt; 'numero_due' not in (select d."NumeroDeclaracao" from sap.due_dados d)
          and itens_averbados -&gt; 0 -&gt;&gt; 'numero_due' in ('24BR0004628584', '24BR0002157037','24BR0002157525')
    """,
  "fetch_results": True
}
</spiffworkflow:preScript>
        <spiffworkflow:serviceTaskOperator id="postgres_v2/DoSQL" resultVariable="rsp">
          <spiffworkflow:parameters>
            <spiffworkflow:parameter id="database_connection_str" type="str" value="&#34;SPIFF_SECRET:postgres&#34;" />
            <spiffworkflow:parameter id="schema" type="any" value="schema" />
          </spiffworkflow:parameters>
        </spiffworkflow:serviceTaskOperator>
        <spiffworkflow:postScript>dues = [
    {
        "numero_due": r[0],
        "data_embarque": r[1],
        "data_averbacao": r[2],
        "motivo_alteracao": r[3],
        "natureza": "",
        "entidade":"",
        "nro_declaracao":"",
        "tipo_documento":"",
        "tipo_conhecimento":"",
        "data_declaracao":"",
        "pais_destino":""
    } for r in rsp['body']
]

del(rsp)</spiffworkflow:postScript>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_17db3yp</bpmn:incoming>
      <bpmn:outgoing>Flow_12pkbxb</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:subProcess id="Activity_0rp2yix">
      <bpmn:extensionElements>
        <spiffworkflow:postScript>del(due)</spiffworkflow:postScript>
        <spiffworkflow:preScript></spiffworkflow:preScript>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_12pkbxb</bpmn:incoming>
      <bpmn:outgoing>Flow_19e22i2</bpmn:outgoing>
      <bpmn:multiInstanceLoopCharacteristics isSequential="true" spiffworkflow:scriptsOnInstances="true">
        <bpmn:loopDataInputRef>dues</bpmn:loopDataInputRef>
        <bpmn:loopDataOutputRef>dues</bpmn:loopDataOutputRef>
        <bpmn:inputDataItem id="due" name="due" />
      </bpmn:multiInstanceLoopCharacteristics>
      <bpmn:startEvent id="Event_0cxxyf3">
        <bpmn:outgoing>Flow_1d28xqv</bpmn:outgoing>
      </bpmn:startEvent>
      <bpmn:sequenceFlow id="Flow_1d28xqv" sourceRef="Event_0cxxyf3" targetRef="Activity_0rsc96w" />
      <bpmn:sequenceFlow id="Flow_0mvhmve" sourceRef="Activity_0rsc96w" targetRef="Activity_153jm8a" />
      <bpmn:endEvent id="Event_19qpy0q">
        <bpmn:incoming>Flow_0bqcq4s</bpmn:incoming>
      </bpmn:endEvent>
      <bpmn:sequenceFlow id="Flow_0bqcq4s" sourceRef="Activity_153jm8a" targetRef="Event_19qpy0q" />
      <bpmn:userTask id="Activity_0rsc96w" name="Complementa dados da DUE">
        <bpmn:extensionElements>
          <spiffworkflow:properties>
            <spiffworkflow:property name="formJsonSchemaFilename" value="complementa-due-schema.json" />
            <spiffworkflow:property name="formUiSchemaFilename" value="complementa-due-uischema.json" />
          </spiffworkflow:properties>
          <spiffworkflow:postScript />
          <spiffworkflow:preScript>try:
    del(formDue)
    formDue = {
        "paisDestino": None,
        "entidade": None,
        "numero_due": due['numero_due'],
        "data_embarque": due['data_embarque'][0:10],
        "data_averbacao": due['data_averbacao'][0:10],
        "naturezaDeclaracao": "{\"id\":1,\"nome_fantasia\":\"Exportação Indireta\"}",
        "tipoConhecimento": "{\"id\":10,\"nome_fantasia\":\"BL\"}",
        "tipoDeclaracao": "{\"id\":2,\"nome_fantasia\":\"Declaração Única de Exportação\"}"
   }
except:
    formDue = {
        "paisDestino": None,
        "entidade": None,
        "numero_due": due['numero_due'],
        "data_embarque": due['data_embarque'][0:10],
        "data_averbacao": due['data_averbacao'][0:10],
        "naturezaDeclaracao": "{\"id\":1,\"nome_fantasia\":\"Exportação Indireta\"}",
        "tipoConhecimento": "{\"id\":10,\"nome_fantasia\":\"BL\"}",
        "tipoDeclaracao": "{\"id\":2,\"nome_fantasia\":\"Declaração Única de Exportação\"}"
   }</spiffworkflow:preScript>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_1d28xqv</bpmn:incoming>
        <bpmn:outgoing>Flow_0mvhmve</bpmn:outgoing>
      </bpmn:userTask>
      <bpmn:scriptTask id="Activity_153jm8a" name="Insere no SAP">
        <bpmn:incoming>Flow_0mvhmve</bpmn:incoming>
        <bpmn:outgoing>Flow_0bqcq4s</bpmn:outgoing>
        <bpmn:script>from connectordb.hana import Hana

paisDestino = json.loads(formDue['paisDestino'])
entidade = json.loads(formDue['entidade'])
numero_due = formDue['numero_due']
data_embarque = formDue['data_embarque']
data_averbacao = formDue['data_averbacao']
naturezaDeclaracao = json.loads(formDue['naturezaDeclaracao'])
tipoConhecimento =  json.loads(formDue['tipoConhecimento'])
tipoDeclaracao = json.loads(formDue['tipoDeclaracao'])

connection = {
    "address": "172.20.1.4",
    "port": "30015",
    "user": "SYSTEM",
    "password": "9Ab63^Op33"
}

baseSap = get_secret('baseSap')

query = f"""
            INSERT INTO {baseSap}."DeclaracaoExportacao"
            ("EntidadeId", 
            "NumeroDeclaracao", 
            "NumeroRegistro", 
            "NumeroConhecimento", 
            "PaisDestino", 
            "DataDeclaracao", 
            "DataRegistro", 
            "DataConhecimento", 
            "DataAverbacao", 
            "NaturezaId", 
            "TipoConhecimentoId", 
            "TipoDocumentoId")
            VALUES(
            {entidade['id']}, 
            '{numero_due}', 
            '{numero_due}',  
            '{numero_due}',  
            '{paisDestino['id']}', 
            '{data_averbacao}',  
            '{data_averbacao}', 
            '{data_averbacao}', 
            '{data_averbacao}', 
            {naturezaDeclaracao['id']}, 
            {tipoConhecimento['id']}, 
            {tipoDeclaracao['id']})
          """

# rsp = json.loads(Hana(connection).selectDb(query))
Hana(connection).executeDb(query)</bpmn:script>
      </bpmn:scriptTask>
    </bpmn:subProcess>
    <bpmn:sequenceFlow id="Flow_19e22i2" sourceRef="Activity_0rp2yix" targetRef="EndEvent_1" />
  </bpmn:process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="Process_gera_due_y29b60r">
      <bpmndi:BPMNShape id="_BPMNShape_StartEvent_2" bpmnElement="StartEvent_1">
        <dc:Bounds x="179" y="159" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_14za570_di" bpmnElement="EndEvent_1">
        <dc:Bounds x="1062" y="159" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0kgs1zt_di" bpmnElement="Activity_0qpzdpu">
        <dc:Bounds x="300" y="137" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0rp2yix_di" bpmnElement="Activity_0rp2yix" isExpanded="true">
        <dc:Bounds x="450" y="77" width="540" height="200" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_0cxxyf3_di" bpmnElement="Event_0cxxyf3">
        <dc:Bounds x="490" y="159" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_19qpy0q_di" bpmnElement="Event_19qpy0q">
        <dc:Bounds x="902" y="159" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1i31z27_di" bpmnElement="Activity_0rsc96w">
        <dc:Bounds x="580" y="137" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0kb8eyo_di" bpmnElement="Activity_153jm8a">
        <dc:Bounds x="750" y="137" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="Flow_1d28xqv_di" bpmnElement="Flow_1d28xqv">
        <di:waypoint x="526" y="177" />
        <di:waypoint x="580" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0mvhmve_di" bpmnElement="Flow_0mvhmve">
        <di:waypoint x="680" y="177" />
        <di:waypoint x="750" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0bqcq4s_di" bpmnElement="Flow_0bqcq4s">
        <di:waypoint x="850" y="177" />
        <di:waypoint x="902" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_17db3yp_di" bpmnElement="Flow_17db3yp">
        <di:waypoint x="215" y="177" />
        <di:waypoint x="300" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_12pkbxb_di" bpmnElement="Flow_12pkbxb">
        <di:waypoint x="400" y="177" />
        <di:waypoint x="450" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_19e22i2_di" bpmnElement="Flow_19e22i2">
        <di:waypoint x="990" y="177" />
        <di:waypoint x="1062" y="177" />
      </bpmndi:BPMNEdge>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</bpmn:definitions>
