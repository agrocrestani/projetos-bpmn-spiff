<?xml version="1.0" encoding="UTF-8"?>
<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:spiffworkflow="http://spiffworkflow.org/bpmn/schema/1.0/core" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" id="Definitions_96f6665" targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="3.0.0-dev">
  <bpmn:process id="Process_estados_xg3r3o6" isExecutable="true">
    <bpmn:startEvent id="StartEvent_1">
      <bpmn:outgoing>Flow_17db3yp</bpmn:outgoing>
    </bpmn:startEvent>
    <bpmn:sequenceFlow id="Flow_17db3yp" sourceRef="StartEvent_1" targetRef="Activity_0qpzdpu" />
    <bpmn:scriptTask id="Activity_0qpzdpu" name="Busca Estados">
      <bpmn:extensionElements>
        <spiffworkflow:instructionsForEndUser>This is an example **Manual Task**. A **Manual Task** is designed to allow someone to complete a task outside of the system and then report back that it is complete. You can click the *Continue* button to proceed. When you are done running this process, you can edit the **Process Model** to include a:

 * **Script Task** - write a short snippet of python code to update some data
 *  **User Task** - generate a form that collects information from a user
 * **Service Task** - communicate with an external API to fetch or update some data.

You can also change the text you are reading here by updating the *Instructions* on this example manual task.</spiffworkflow:instructionsForEndUser>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_17db3yp</bpmn:incoming>
      <bpmn:outgoing>Flow_16h45ra</bpmn:outgoing>
      <bpmn:script>from connectordb.hana import Hana

connection = { 
    "address": get_secret('hanaAddress'), 
    "port": get_secret('hanaPort'), 
    "user": get_secret('hanaUser'), 
    "password": get_secret('hanaPassword') 
} 
baseSap = get_secret('baseSap')

query = f"""
          SELECT ie.UF, ie."Nome" FROM {baseSap}."IbgeEstados" ie 
        """

rsp = Hana(connection).selectDb(query)

# rsp = json.loads(Hana(connection).selectDb(query))

del(connection)</bpmn:script>
    </bpmn:scriptTask>
    <bpmn:sequenceFlow id="Flow_16h45ra" sourceRef="Activity_0qpzdpu" targetRef="Activity_1tpkk9s" />
    <bpmn:endEvent id="Event_0a2e0q2">
      <bpmn:incoming>Flow_0de4spa</bpmn:incoming>
    </bpmn:endEvent>
    <bpmn:sequenceFlow id="Flow_0de4spa" sourceRef="Activity_1tpkk9s" targetRef="Event_0a2e0q2" />
    <bpmn:dataStoreReference id="DataStoreReference_18dig2l" name="Estados" dataStoreRef="estados" type="json" />
    <bpmn:scriptTask id="Activity_1tpkk9s" name="parse Estados">
      <bpmn:incoming>Flow_16h45ra</bpmn:incoming>
      <bpmn:outgoing>Flow_0de4spa</bpmn:outgoing>
      <bpmn:dataOutputAssociation id="DataOutputAssociation_1t4ltck">
        <bpmn:targetRef>DataStoreReference_18dig2l</bpmn:targetRef>
      </bpmn:dataOutputAssociation>
      <bpmn:script>n_estados = [
    {
      "value": "",
      "label": ""
    }
]

for r in rsp:
    uf = str(r['uf'])
    nome = str(r['nome'])
    n_estados.append(
        {
            "value": uf, 
            "label": uf + " - " + nome
        }
    )

estados = n_estados

del(rsp)
del(n_estados)
</bpmn:script>
    </bpmn:scriptTask>
  </bpmn:process>
  <bpmn:dataStore id="estados" name="JSONDataStore" />
  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="Process_estados_xg3r3o6">
      <bpmndi:BPMNShape id="_BPMNShape_StartEvent_2" bpmnElement="StartEvent_1">
        <dc:Bounds x="179" y="159" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0i1fg6g_di" bpmnElement="Activity_0qpzdpu">
        <dc:Bounds x="270" y="137" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_0a2e0q2_di" bpmnElement="Event_0a2e0q2">
        <dc:Bounds x="592" y="159" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="DataStoreReference_18dig2l_di" bpmnElement="DataStoreReference_18dig2l">
        <dc:Bounds x="495" y="305" width="50" height="50" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="500" y="362" width="41" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1dgnxtr_di" bpmnElement="Activity_1tpkk9s">
        <dc:Bounds x="430" y="138" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="Flow_17db3yp_di" bpmnElement="Flow_17db3yp">
        <di:waypoint x="215" y="177" />
        <di:waypoint x="270" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_16h45ra_di" bpmnElement="Flow_16h45ra">
        <di:waypoint x="370" y="177" />
        <di:waypoint x="400" y="177" />
        <di:waypoint x="400" y="178" />
        <di:waypoint x="430" y="178" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0de4spa_di" bpmnElement="Flow_0de4spa">
        <di:waypoint x="530" y="178" />
        <di:waypoint x="561" y="178" />
        <di:waypoint x="561" y="177" />
        <di:waypoint x="592" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="DataOutputAssociation_1t4ltck_di" bpmnElement="DataOutputAssociation_1t4ltck">
        <di:waypoint x="492" y="218" />
        <di:waypoint x="518" y="305" />
      </bpmndi:BPMNEdge>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</bpmn:definitions>
