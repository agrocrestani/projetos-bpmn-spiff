<?xml version="1.0" encoding="UTF-8"?>
<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:spiffworkflow="http://spiffworkflow.org/bpmn/schema/1.0/core" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" id="Definitions_96f6665" targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="3.0.0-dev">
  <bpmn:process id="Process_ajuste_custo_sap_5dnpvbm" isExecutable="true">
    <bpmn:startEvent id="StartEvent_1">
      <bpmn:outgoing>Flow_17db3yp</bpmn:outgoing>
    </bpmn:startEvent>
    <bpmn:sequenceFlow id="Flow_17db3yp" sourceRef="StartEvent_1" targetRef="Activity_00bh8bd" />
    <bpmn:endEvent id="EndEvent_1">
      <bpmn:incoming>Flow_1pd10hb</bpmn:incoming>
    </bpmn:endEvent>
    <bpmn:scriptTask id="BuscaProdutosPorDepositoSAP" name="Busca Produtos por Deposito no SAP">
      <bpmn:extensionElements>
        <spiffworkflow:instructionsForEndUser />
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_13pu6hq</bpmn:incoming>
      <bpmn:incoming>Flow_10e4xqh</bpmn:incoming>
      <bpmn:outgoing>Flow_12354sq</bpmn:outgoing>
      <bpmn:script>from connectordb.hana import Hana

baseSap = get_secret('baseSap')

consulta_movimentos = []

connection = {
    "address": "172.20.1.4",
    "port": "30015",
    "user": "SYSTEM",
    "password": "9Ab63^Op33"
}

query_movimento = f"""
                SELECT 
                    t0."ORIGEM" ,
                    CAST(t0."ItemCode" AS VARCHAR(100)) AS "Produto" ,
                    t0."TIPO" ,
                    CAST(t0."DocDueDate" AS VARCHAR(100)) AS "DocDueDate" ,
                    CAST(t0."DocNum" AS VARCHAR(100)) AS "DocNum",
                    CAST(t0."QTDE" AS VARCHAR(100)) AS "QTDE",
                    CAST(t0."LineTotal" AS VARCHAR(100)) AS "LineTotal",
                    CAST(t0."unitMsr" AS VARCHAR(100)) AS "unitMsr" ,
                    CAST(t0."BaseType" AS VARCHAR(100)) AS "BaseType" ,
                    CAST(t0."BaseRef" AS VARCHAR(100)) AS "BaseRef" ,
                    CAST(t0."CreateDate" AS VARCHAR(100)) AS "CreateDate" ,
                    CAST(t0."CreateTS" AS VARCHAR(100)) AS "CreateTS" ,
                    CAST(t0.CANCELED AS VARCHAR(2)) AS "CANCELED" ,
                    CAST(t0."StockPrice" AS VARCHAR(100)) AS "StockPrice"
                FROM {baseSap}.AC_MOVIMENTOS t0
                WHERE 
                    t0."ItemCode" = '{produto}' AND
	                t0."WhsCode" = '{deposito}' AND
                    t0."DocDueDate" &gt;= '{dataInicio}' AND t0."DocDueDate" &lt;= '{dataFinal}'
                ORDER BY t0."CreateDate", t0."CreateTS"
                """   
                    
consulta_movimentos = Hana(connection).selectDb(query_movimento)

if(consulta_movimentos != []):
    query_um_produto_estoque =  f"""
                    SELECT  
                        t0."InvntryUom",
                        t0."ItemName"
                    FROM {baseSap}.OITM t0
                    WHERE t0."ItemCode" = '{produto}';
                    """

    um_produto_estoque = Hana(connection).selectDb(query_um_produto_estoque)
    
    desc_produto = um_produto_estoque[0]['itemname']    
    query_deposito = f"""
                    SELECT  
                        CAST(t0."AvgPrice" AS VARCHAR(50)) AS "AvgPrice"
                    FROM {baseSap}.OITW t0
                    WHERE t0."ItemCode" = '{produto}' AND t0."WhsCode" = '{deposito}';
                    """
    
    deposito_estoque = Hana(connection).selectDb(query_deposito)
    custo_produto_deposito = deposito_estoque[0]['avgprice']
    del(deposito_estoque)
    del(query_deposito)
    
    num_movimentos = 0

    # Lista para armazenar os elementos a serem removidos
    indices_para_remover = []

    # Iterar sobre os elementos da lista
    for i, movimento in enumerate(consulta_movimentos):
        # Verificar se a origem é "	7-Nfe.Entrada" e basetype é 20 e baseref é igual ao docnum do elemento de "11-Recebimento de Mercadoria"
        if movimento["origem"] == "7-Nfe.Entrada" and movimento["basetype"] == "20":
            for movimento_recebimento in consulta_movimentos:
                if movimento_recebimento["origem"] == "11-Recebimento de Mercadoria" and movimento_recebimento["docnum"] == movimento["baseref"]:
                    indices_para_remover.append(i)
        if movimento['origem'] == '1-Saldo Inicial':
            movimento['unitmsr'] = um_produto_estoque[0]['invntryuom']
            movimento['canceled'] = 'N'
        
        ano = movimento['docduedate'][0:4]
        mes = movimento['docduedate'][5:7]
        dia = movimento['docduedate'][8:10]

        movimento['docduedate'] = "{}/{}/{}".format(dia, mes, ano)

    if(indices_para_remover != []):
        # Remover os elementos da lista
        for indice in sorted(indices_para_remover, reverse=True):
            del consulta_movimentos[indice]
    
        del(indice)
        del(movimento_recebimento)

    del(indices_para_remover)
    del(movimento)
    del(query_um_produto_estoque)

del(connection)
del(query_movimento)
del(baseSap)</bpmn:script>
    </bpmn:scriptTask>
    <bpmn:sequenceFlow id="Flow_1n8yish" sourceRef="EntradasItens" targetRef="Gateway_0p3bhmm" />
    <bpmn:subProcess id="Activity_1d1r8sl">
      <bpmn:extensionElements>
        <spiffworkflow:postScript>del(x)</spiffworkflow:postScript>
        <spiffworkflow:preScript />
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_1yez69d</bpmn:incoming>
      <bpmn:outgoing>Flow_0kxg7eo</bpmn:outgoing>
      <bpmn:multiInstanceLoopCharacteristics isSequential="true" spiffworkflow:scriptsOnInstances="true">
        <bpmn:loopDataInputRef>consulta_movimentos</bpmn:loopDataInputRef>
        <bpmn:loopDataOutputRef>consulta_movimentos_out</bpmn:loopDataOutputRef>
        <bpmn:inputDataItem id="x" name="x" />
      </bpmn:multiInstanceLoopCharacteristics>
      <bpmn:startEvent id="Event_117o128">
        <bpmn:outgoing>Flow_1l99k7c</bpmn:outgoing>
      </bpmn:startEvent>
      <bpmn:businessRuleTask id="ConversorUnidadeMedida" name="Conversor de Unidade de Medida">
        <bpmn:extensionElements>
          <spiffworkflow:preScript>unidadeDocumento = x['unitmsr']
unidadeEstoque = um_produto_estoque[0]['invntryuom']</spiffworkflow:preScript>
          <spiffworkflow:postScript>multiplicador = multiplicador

</spiffworkflow:postScript>
          <spiffworkflow:calledDecisionId>decision_1</spiffworkflow:calledDecisionId>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_1l99k7c</bpmn:incoming>
        <bpmn:outgoing>Flow_0f953hs</bpmn:outgoing>
      </bpmn:businessRuleTask>
      <bpmn:sequenceFlow id="Flow_1l99k7c" sourceRef="Event_117o128" targetRef="ConversorUnidadeMedida" />
      <bpmn:sequenceFlow id="Flow_0f953hs" sourceRef="ConversorUnidadeMedida" targetRef="NormalizandoEstoque" />
      <bpmn:scriptTask id="NormalizandoEstoque" name="Normalizando Estoque">
        <bpmn:incoming>Flow_0f953hs</bpmn:incoming>
        <bpmn:outgoing>Flow_14z5yhx</bpmn:outgoing>
        <bpmn:script>
num_movimentos += 1
precoProdutoNormalizado = float(x["linetotal"].replace(",", ".")) / float(x["qtde"].replace(",", ".")) / multiplicador
quantidadeEstoqueNormalizada = multiplicador * float(x["qtde"].replace(",", "."))
precoTotalNormalizado = float(x["linetotal"].replace(",", "."))

x['stockprice'] = float(x["stockprice"].replace(",", "."))

if(x['origem'] == '7-Nfe.Entrada' and (x['canceled'] == 'C')):
    quantidadeEstoqueNormalizada = quantidadeEstoqueNormalizada * -1
    precoProdutoNormalizado = precoProdutoNormalizado * -1
    precoTotalNormalizado = precoTotalNormalizado * -1

x['qtde'] = quantidadeEstoqueNormalizada
x['preco_unitario'] = precoProdutoNormalizado
x['linetotal'] = precoTotalNormalizado
x['num_movimentos'] = num_movimentos

consulta_movimentos_out.append(x)

del(quantidadeEstoqueNormalizada)
del(precoProdutoNormalizado)
del(precoTotalNormalizado)
</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:endEvent id="Event_1dydh6d">
        <bpmn:incoming>Flow_14z5yhx</bpmn:incoming>
      </bpmn:endEvent>
      <bpmn:sequenceFlow id="Flow_14z5yhx" sourceRef="NormalizandoEstoque" targetRef="Event_1dydh6d" />
    </bpmn:subProcess>
    <bpmn:sequenceFlow id="Flow_12354sq" sourceRef="BuscaProdutosPorDepositoSAP" targetRef="Gateway_0mqija0" />
    <bpmn:sequenceFlow id="Flow_0kxg7eo" sourceRef="Activity_1d1r8sl" targetRef="EntradasItens" />
    <bpmn:sequenceFlow id="Flow_13pu6hq" sourceRef="Activity_00bh8bd" targetRef="BuscaProdutosPorDepositoSAP" />
    <bpmn:userTask id="Activity_00bh8bd" name="Selecionar Produto e Deposito">
      <bpmn:extensionElements>
        <spiffworkflow:properties>
          <spiffworkflow:property name="formJsonSchemaFilename" value="selecionar-produto-deposito-schema.json" />
          <spiffworkflow:property name="formUiSchemaFilename" value="selecionar-produto-deposito-uischema.json" />
        </spiffworkflow:properties>
        <spiffworkflow:preScript>from connectordb.hana import Hana

baseSap = get_secret('baseSap')

connection = {
    "address": "172.20.1.4",
    "port": "30015",
    "user": "SYSTEM",
    "password": "9Ab63^Op33"
}

query_produtos = f"""
                    SELECT DISTINCT 
                        t0."ItemCode" ,
                        t1."ItemName" 
                    FROM 
                        {baseSap}.OITW t0
                        INNER JOIN {baseSap}.OITM t1 ON t1."ItemCode" = t0."ItemCode"
                    WHERE t0."AvgPrice" &gt; 0
                    ORDER BY t0."ItemCode"
                """

query_depositos = f"""
                    SELECT DISTINCT 
                        t0."WhsCode" ,
                        COALESCE(CAST(t1."WhsName" AS VARCHAR(50)), '') AS "whsname"
                    FROM 
                        {baseSap}.OITW t0
                        LEFT JOIN {baseSap}.OWHS t1 ON t1."WhsCode" = t0."WhsCode"
                    WHERE t0."AvgPrice" &gt; 0
                    ORDER BY t0."WhsCode"
                """


consulta_produtos = Hana(connection).selectDb(query_produtos)
consulta_depositos = Hana(connection).selectDb(query_depositos)

del(query_depositos)
del(query_produtos)
del(baseSap)
del(connection)


produtosList = []
for produto in consulta_depositos:
    produtosList.append(
        {
            "value" : produto['whscode'] ,
            "label" : produto['whscode'] + ' - ' + produto['whsname']
        }
    )

del(produto)
del(consulta_produtos)

depositosList = []
for deposito in consulta_depositos:
    depositosList.append(
        {
            "value" : deposito['whscode'] ,
            "label" : deposito['whscode'] + ' - ' + deposito['whsname']
        }
    )

del(deposito)
del(consulta_depositos)
</spiffworkflow:preScript>
        <spiffworkflow:instructionsForEndUser />
        <spiffworkflow:postScript>del(depositosList)
del(produtosList)</spiffworkflow:postScript>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_17db3yp</bpmn:incoming>
      <bpmn:incoming>Flow_0ho3zz6</bpmn:incoming>
      <bpmn:outgoing>Flow_13pu6hq</bpmn:outgoing>
    </bpmn:userTask>
    <bpmn:exclusiveGateway id="Gateway_0mqija0" default="Flow_1yez69d">
      <bpmn:incoming>Flow_12354sq</bpmn:incoming>
      <bpmn:outgoing>Flow_1yez69d</bpmn:outgoing>
      <bpmn:outgoing>Flow_1462x9u</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:sequenceFlow id="Flow_1yez69d" sourceRef="Gateway_0mqija0" targetRef="Activity_1d1r8sl">
      <bpmn:conditionExpression>consulta_movimentos != []</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="Flow_1462x9u" sourceRef="Gateway_0mqija0" targetRef="MovimentoEntradaNaoEncontrado">
      <bpmn:conditionExpression>consulta_movimentos == []</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:exclusiveGateway id="Gateway_0zhxafw" default="Flow_0ho3zz6">
      <bpmn:incoming>Flow_0n3n3cb</bpmn:incoming>
      <bpmn:outgoing>Flow_0ho3zz6</bpmn:outgoing>
      <bpmn:outgoing>Flow_0gpghte</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:sequenceFlow id="Flow_0n3n3cb" sourceRef="MovimentoEntradaNaoEncontrado" targetRef="Gateway_0zhxafw" />
    <bpmn:sequenceFlow id="Flow_0ho3zz6" sourceRef="Gateway_0zhxafw" targetRef="Activity_00bh8bd">
      <bpmn:conditionExpression>novaBusca == True</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:userTask id="MovimentoEntradaNaoEncontrado" name="Movimento de Entrada não encontrado">
      <bpmn:extensionElements>
        <spiffworkflow:instructionsForEndUser>## &lt;span style="font-weight: bold; color: red;"&gt;Nenhum movimento de entrada encontrado para o &lt;br&gt;Produto &lt;span style="color: black;"&gt; **{{produto}}**&lt;/span&gt; e depósito &lt;span style="color: black;"&gt;**{{deposito}}**&lt;/span&gt; !!&lt;/span&gt;

</spiffworkflow:instructionsForEndUser>
        <spiffworkflow:properties>
          <spiffworkflow:property name="formJsonSchemaFilename" value="selecionar-novos-parametros-schema.json" />
          <spiffworkflow:property name="formUiSchemaFilename" value="selecionar-novos-parametros-uischema.json" />
        </spiffworkflow:properties>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_1462x9u</bpmn:incoming>
      <bpmn:outgoing>Flow_0n3n3cb</bpmn:outgoing>
    </bpmn:userTask>
    <bpmn:endEvent id="Event_1n8n9v9">
      <bpmn:incoming>Flow_0gpghte</bpmn:incoming>
    </bpmn:endEvent>
    <bpmn:sequenceFlow id="Flow_0gpghte" sourceRef="Gateway_0zhxafw" targetRef="Event_1n8n9v9">
      <bpmn:conditionExpression>novaBusca == False</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:exclusiveGateway id="Gateway_0p3bhmm" default="Flow_1pd10hb">
      <bpmn:incoming>Flow_1n8yish</bpmn:incoming>
      <bpmn:outgoing>Flow_1pd10hb</bpmn:outgoing>
      <bpmn:outgoing>Flow_10e4xqh</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:sequenceFlow id="Flow_1pd10hb" sourceRef="Gateway_0p3bhmm" targetRef="EndEvent_1">
      <bpmn:conditionExpression>recalcular == False</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:userTask id="EntradasItens" name="Entradas dos Itens">
      <bpmn:extensionElements>
        <spiffworkflow:properties>
          <spiffworkflow:property name="formJsonSchemaFilename" value="calculo-custo-estoque-schema.json" />
          <spiffworkflow:property name="formUiSchemaFilename" value="calculo-custo-estoque-uischema.json" />
        </spiffworkflow:properties>
        <spiffworkflow:preScript># Inicialize as variáveis para calcular o custo médio unitário
total_preco_unitario_entrada = 0
total_quantidade_entrada = 0

total_preco_unitario_saida = 0
total_quantidade_saida = 0
total_custo_calc_saida = 0

total_preco_unitario = 0
total_quantidade = 0

entrada = []
saida = []

count_entrada = 0
count_saida = 0
custo_medio = 0
if isinstance(consulta_movimentos_out, list):
    for produtoAux in consulta_movimentos_out:
        if produtoAux['tipo'] == "E" :
            if produtoAux['canceled'] == 'N':
                total_preco_unitario_entrada += produtoAux['linetotal']
                total_quantidade_entrada += produtoAux['qtde']
                
                total_preco_unitario += produtoAux['linetotal']
                total_quantidade += produtoAux['qtde']
                
                if total_quantidade &gt; 0:
                    custo_medio = total_preco_unitario / total_quantidade
                else: 
                    custo_medio = (custo_medio + (produtoAux['linetotal'] / produtoAux['qtde'])) / 2
                
                produtoAux['custo_medio'] = custo_medio
                produtoAux['estoque_atual'] = total_quantidade
                produtoAux['custo_medio_calc'] = custo_medio * produtoAux['qtde']
                produtoAux['custo_total_contabil'] = produtoAux['linetotal']

            else:
                produtoAux['custo_medio'] = 000.000
                produtoAux['estoque_atual'] = 000.000
                produtoAux['custo_medio_calc'] = 000.000
                produtoAux['custo_total_contabil'] = 000.000
        
        if produtoAux['tipo'] == "S":
            if produtoAux['canceled'] == 'N':
                total_preco_unitario_saida += produtoAux['stockprice'] * produtoAux['qtde']
                total_quantidade_saida += produtoAux['qtde']
                produtoAux['custo_medio'] = custo_medio
                produtoAux['custo_medio_calc'] = custo_medio * produtoAux['qtde']
                total_quantidade = produtoAux['qtde'] +  total_quantidade
                produtoAux['estoque_atual'] = total_quantidade
                total_custo_calc_saida += produtoAux['custo_medio_calc']
                produtoAux['custo_total_contabil'] = produtoAux['stockprice'] * produtoAux['qtde']
                produtoAux['preco_unitario'] = produtoAux['stockprice']
            else:
                produtoAux['custo_medio'] = 000.000
                produtoAux['estoque_atual'] = 000.000
                produtoAux['custo_medio_calc'] = 000.000
                produtoAux['custo_total_contabil'] = 000.000
    del(produtoAux)

else:
    print("Erro: 'produtosDespositos' não é uma lista.")


total_estoque = total_quantidade_saida + total_quantidade_entrada

custo_medio_unitario_entrada = 0
if total_quantidade_entrada != 0:
    custo_medio_unitario_entrada = total_preco_unitario_entrada / total_quantidade_entrada
    print("Custo médio unitário:", custo_medio_unitario_entrada)
else:
    print("Não foi possível calcular o custo médio unitário. Total de quantidade é zero.")

custo_medio_unitario_saida = 0
if total_quantidade_saida != 0:
    custo_medio_unitario_saida = total_preco_unitario_saida / total_quantidade_saida
    print("Custo médio unitário:", custo_medio_unitario_saida)
else:
    print("Não foi possível calcular o custo médio unitário. Total de quantidade é zero.")



recalcular = False

del(consulta_movimentos)</spiffworkflow:preScript>
        <spiffworkflow:postScript>del(consulta_movimentos_out)
</spiffworkflow:postScript>
        <spiffworkflow:instructionsForEndUser>Produto: **{{produto}}** - {{desc_produto}} &lt;br&gt;
Deposito: {{deposito}} &lt;br&gt;
Custo Produto: {{ '{:,.3f}.format('custo_produto_deposito).replace(',', ' ').replace('.', ',').replace(' ', '.') }}


### Entrada

| Quantidade Total | Custo Médio | Custo Total |
| ---------------------: | ----------------: | --------------: |
| {{ '{:,.3f}'.format(total_quantidade_entrada).replace(',', ' ').replace('.', ',').replace(' ', '.') }} | {{ '{:,.3f}'.format(custo_medio_unitario_entrada).replace(',', ' ').replace('.', ',').replace(' ', '.')}} | {{'{:,.3f}'.format(total_preco_unitario_entrada).replace(',', ' ').replace('.', ',').replace(' ', '.') }} |

### Saida

| Quantidade Total | Custo Médio | Custo Total |
| ---------------------: | ----------------: | --------------: |
| {{ '{:,.3f}'.format(total_quantidade_saida).replace(',', ' ').replace('.', ',').replace(' ', '.') }} | {{ '{:,.3f}'.format(custo_medio_unitario_saida).replace(',', ' ').replace('.', ',').replace(' ', '.')}} | {{'{:,.3f}'.format(total_preco_unitario_saida).replace(',', ' ').replace('.', ',').replace(' ', '.') }} |


Custo Total Saída Calc.: {{ '{:,.3f}'.format(total_custo_calc_saida).replace(',', ' ').replace('.', ',').replace(' ', '.') }}&lt;br&gt;


Quantidade Total Estoque: {{ '{:,.3f}'.format(total_estoque).replace(',', ' ').replace('.', ',').replace(' ', '.') }}&lt;br&gt;

| Num. | Origem | Num. Doc. | Quantidade | Custo Unitário  | Custo Total | Custo Médio Calc. | Custo Calc. | Estoque | Data | Canc. |
| ------- | ------- | -------------- | ----------: | ---------------: | ---------------: | ----------- | --------- | ------- | ----- | ---- |
{% for produto in consulta_movimentos_out %}
| {{ produto['num_movimentos'] }} | {{ produto['origem'] }} | {{ produto['docnum'] }} | {{ '{:,.3f}'.format(produto['qtde']).replace(',', ' ').replace('.', ',').replace(' ', '.') }} | {{ '{:,.3f}'.format(produto['preco_unitario']).replace(',', ' ').replace('.', ',').replace(' ', '.') }} | {{ '{:,.3f}'.format(produto['custo_total_contabil']).replace(',', ' ').replace('.', ',').replace(' ', '.') }} | {{ '{:,.3f}'.format(produto['custo_medio']).replace(',', ' ').replace('.', ',').replace(' ', '.') }} | {{ '{:,.3f}'.format(produto['custo_medio_calc']).replace(',', ' ').replace('.', ',').replace(' ', '.')}} | {{ '{:,.3f}'.format(produto['estoque_atual']).replace(',', ' ').replace('.', ',').replace(' ', '.') }} | {{produto['docduedate']}} | {{produto['canceled']}} |
{% endfor %}

</spiffworkflow:instructionsForEndUser>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_0kxg7eo</bpmn:incoming>
      <bpmn:outgoing>Flow_1n8yish</bpmn:outgoing>
    </bpmn:userTask>
    <bpmn:sequenceFlow id="Flow_10e4xqh" sourceRef="Gateway_0p3bhmm" targetRef="BuscaProdutosPorDepositoSAP">
      <bpmn:conditionExpression>recalcular == True</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
  </bpmn:process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="Process_ajuste_custo_sap_5dnpvbm">
      <bpmndi:BPMNShape id="_BPMNShape_StartEvent_2" bpmnElement="StartEvent_1">
        <dc:Bounds x="-258" y="159" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_14za570_di" bpmnElement="EndEvent_1">
        <dc:Bounds x="1122" y="159" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0m8n14o_di" bpmnElement="BuscaProdutosPorDepositoSAP">
        <dc:Bounds x="-10" y="137" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1d1r8sl_di" bpmnElement="Activity_1d1r8sl" isExpanded="true">
        <dc:Bounds x="220" y="77" width="550" height="200" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_117o128_di" bpmnElement="Event_117o128">
        <dc:Bounds x="242" y="159" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0s2c0do_di" bpmnElement="ConversorUnidadeMedida">
        <dc:Bounds x="330" y="137" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_01u9h9m_di" bpmnElement="NormalizandoEstoque">
        <dc:Bounds x="510" y="137" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_1dydh6d_di" bpmnElement="Event_1dydh6d">
        <dc:Bounds x="712" y="159" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="Flow_1l99k7c_di" bpmnElement="Flow_1l99k7c">
        <di:waypoint x="278" y="177" />
        <di:waypoint x="330" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0f953hs_di" bpmnElement="Flow_0f953hs">
        <di:waypoint x="430" y="177" />
        <di:waypoint x="510" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_14z5yhx_di" bpmnElement="Flow_14z5yhx">
        <di:waypoint x="610" y="177" />
        <di:waypoint x="712" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="Activity_122wunj_di" bpmnElement="Activity_00bh8bd">
        <dc:Bounds x="-150" y="137" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_0mqija0_di" bpmnElement="Gateway_0mqija0" isMarkerVisible="true">
        <dc:Bounds x="125" y="152" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1gw7jjv" bpmnElement="Gateway_0zhxafw" isMarkerVisible="true">
        <dc:Bounds x="15" y="365" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0tm9ngj_di" bpmnElement="MovimentoEntradaNaoEncontrado">
        <dc:Bounds x="-10" y="250" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_1n8n9v9_di" bpmnElement="Event_1n8n9v9">
        <dc:Bounds x="1072" y="372" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_0p3bhmm_di" bpmnElement="Gateway_0p3bhmm" isMarkerVisible="true">
        <dc:Bounds x="975" y="152" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0eguz8h_di" bpmnElement="EntradasItens">
        <dc:Bounds x="830" y="137" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="Flow_17db3yp_di" bpmnElement="Flow_17db3yp">
        <di:waypoint x="-222" y="177" />
        <di:waypoint x="-150" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1n8yish_di" bpmnElement="Flow_1n8yish">
        <di:waypoint x="930" y="177" />
        <di:waypoint x="975" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_12354sq_di" bpmnElement="Flow_12354sq">
        <di:waypoint x="90" y="177" />
        <di:waypoint x="125" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0kxg7eo_di" bpmnElement="Flow_0kxg7eo">
        <di:waypoint x="770" y="177" />
        <di:waypoint x="830" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_13pu6hq_di" bpmnElement="Flow_13pu6hq">
        <di:waypoint x="-50" y="177" />
        <di:waypoint x="-10" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1yez69d_di" bpmnElement="Flow_1yez69d">
        <di:waypoint x="175" y="177" />
        <di:waypoint x="220" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1462x9u_di" bpmnElement="Flow_1462x9u">
        <di:waypoint x="150" y="202" />
        <di:waypoint x="150" y="290" />
        <di:waypoint x="90" y="290" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0n3n3cb_di" bpmnElement="Flow_0n3n3cb">
        <di:waypoint x="40" y="330" />
        <di:waypoint x="40" y="365" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0ho3zz6_di" bpmnElement="Flow_0ho3zz6">
        <di:waypoint x="15" y="390" />
        <di:waypoint x="-100" y="390" />
        <di:waypoint x="-100" y="217" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0gpghte_di" bpmnElement="Flow_0gpghte">
        <di:waypoint x="65" y="390" />
        <di:waypoint x="1072" y="390" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1pd10hb_di" bpmnElement="Flow_1pd10hb">
        <di:waypoint x="1025" y="177" />
        <di:waypoint x="1122" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_10e4xqh_di" bpmnElement="Flow_10e4xqh">
        <di:waypoint x="1000" y="152" />
        <di:waypoint x="1000" y="20" />
        <di:waypoint x="40" y="20" />
        <di:waypoint x="40" y="137" />
      </bpmndi:BPMNEdge>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</bpmn:definitions>
