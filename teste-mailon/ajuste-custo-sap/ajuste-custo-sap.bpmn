<?xml version="1.0" encoding="UTF-8"?>
<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:spiffworkflow="http://spiffworkflow.org/bpmn/schema/1.0/core" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" id="Definitions_96f6665" targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="3.0.0-dev">
  <bpmn:process id="Process_ajuste_custo_sap_5dnpvbm" isExecutable="true">
    <bpmn:startEvent id="StartEvent_1">
      <bpmn:outgoing>Flow_17db3yp</bpmn:outgoing>
    </bpmn:startEvent>
    <bpmn:sequenceFlow id="Flow_17db3yp" sourceRef="StartEvent_1" targetRef="Activity_00bh8bd" />
    <bpmn:endEvent id="EndEvent_1">
      <bpmn:incoming>Flow_00do74e</bpmn:incoming>
    </bpmn:endEvent>
    <bpmn:scriptTask id="BuscaProdutosPorDepositoSAP" name="Busca Produtos por Deposito no SAP">
      <bpmn:extensionElements>
        <spiffworkflow:instructionsForEndUser />
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_13pu6hq</bpmn:incoming>
      <bpmn:outgoing>Flow_12354sq</bpmn:outgoing>
      <bpmn:script>from connectordb.hana import Hana

baseSap = get_secret('baseSap')

produtosDepositosNormalizados = []

produtosDepositos = []

connection = {
    "address": "172.20.1.4",
    "port": "30015",
    "user": "SYSTEM",
    "password": "9Ab63^Op33"
}

# Consulta para produtos comprados (PCH1/OPCH)
query_compras = f"""
    SELECT 
        t0."ItemCode" || ' - ' || t0."ItemName" AS "Produto" , 
        CAST(t2."Price" AS VARCHAR(50)) AS "Preço Unitario" , 
        CAST(t2."Quantity" AS VARCHAR(50)) AS "Quantidade" ,
        CAST(t2."LineTotal" AS VARCHAR(50)) AS "Preço Total" ,
        t2."unitMsr" AS "Unidade Documento" , 
        t0."InvntryUom" AS "Unidade Estoque" , 
        CAST(t3."DocNum" AS VARCHAR(50)) AS "DocNum" ,
        CAST(t3."ObjType" AS VARCHAR(50)) AS "Documento"
    FROM {baseSap}.OITM t0
    INNER JOIN {baseSap}.OITW t1 ON t1."ItemCode" = t0."ItemCode"
    INNER JOIN {baseSap}.PCH1 t2 ON t2."ItemCode" = t0."ItemCode" AND t2."WhsCode" = '{deposito}'
    INNER JOIN {baseSap}.OPCH t3 ON t3."DocEntry" = t2."DocEntry" AND t3.CANCELED = 'N'
    WHERE t0."ItemCode" = '{produto}' AND t1."WhsCode" = '{deposito}'
    ORDER BY t3."DocEntry"
"""

# Consulta para produtos de transferência (PDN1/OPDN)
query_transferencias = f"""
    SELECT 
        t0."ItemCode" || ' - ' || t0."ItemName" AS "Produto" , 
        CAST(t2."Price" AS VARCHAR(50)) AS "Preço Unitario" , 
        CAST(t2."Quantity" AS VARCHAR(50)) AS "Quantidade" ,
        CAST(t2."LineTotal" AS VARCHAR(50)) AS "Preço Total" ,
        t2."unitMsr" AS "Unidade Documento" , 
        t0."InvntryUom" AS "Unidade Estoque" , 
        CAST(t3."DocNum" AS VARCHAR(50)) AS "DocNum" ,
        CAST(t3."ObjType" AS VARCHAR(50)) AS "Documento"
    FROM {baseSap}.OITM t0
    INNER JOIN {baseSap}.OITW t1 ON t1."ItemCode" = t0."ItemCode"
    INNER JOIN {baseSap}.PDN1 t2 ON t2."ItemCode" = t0."ItemCode" AND t2."WhsCode" = '{deposito}'
    INNER JOIN {baseSap}.OPDN t3 ON t3."DocEntry" = t2."DocEntry" AND t3.CANCELED = 'N'
    WHERE t0."ItemCode" = '{produto}' AND t1."WhsCode" = '{deposito}'
    ORDER BY t3."DocEntry"
"""

# Executar as consultas
consulta_compras = Hana(connection).selectDb(query_compras)
consulta_transferencias = Hana(connection).selectDb(query_transferencias)

# Combinar os resultados
produtosDepositos = consulta_compras + consulta_transferencias

del(connection)
del(consulta_compras)
del(consulta_transferencias)
del(query_compras)
del(query_transferencias)
del(baseSap)</bpmn:script>
    </bpmn:scriptTask>
    <bpmn:manualTask id="EntradasItens" name="Entradas dos Itens">
      <bpmn:extensionElements>
        <spiffworkflow:properties>
          <spiffworkflow:property name="formJsonSchemaFilename" value="" />
          <spiffworkflow:property name="formUiSchemaFilename" value="" />
        </spiffworkflow:properties>
        <spiffworkflow:preScript># Inicialize as variáveis para calcular o custo médio unitário
total_preco_unitario = 0
total_quantidade = 0

# Verifique se produtosDespositos é uma lista
if isinstance(produtosDepositosNormalizados, list):
    for produtoAux in produtosDepositosNormalizados:
        # Verifique se o produto contém as chaves necessárias
        if "preço unitario" in produtoAux and "quantidade" in produtoAux:
            preco_unitario = float(produtoAux["preço unitario"])
            quantidade = float(produtoAux["quantidade"])
            total_preco_unitario += preco_unitario * quantidade
            total_quantidade += quantidade
else:
    print("Erro: 'produtosDespositos' não é uma lista.")

# Verifique se houve algum produto na lista
if total_quantidade != 0:
    custo_medio_unitario = total_preco_unitario / total_quantidade
    print("Custo médio unitário:", custo_medio_unitario)
else:
    print("Não foi possível calcular o custo médio unitário. Total de quantidade é zero.")
</spiffworkflow:preScript>
        <spiffworkflow:postScript />
        <spiffworkflow:instructionsForEndUser>
Produto: **{{ produtoAux['produto'] }}**  &lt;br&gt;
Deposito: **{{ deposito}}** &lt;br&gt;
UM: **{{produtoAux['unidade estoque']}}** &lt;br&gt;

Custo Médio Unitário: **{{ '{:,.3f}'.format(custo_medio_unitario).replace(',', ' ').replace('.', ',').replace(' ', '.') }}** &lt;br&gt;
Quantidade Total: **{{ '{:,.3f}'.format(total_quantidade).replace(',', ' ').replace('.', ',').replace(' ', '.')}}** &lt;br&gt;
Custo Total: **{{ '{:,.3f}'.format(total_preco_unitario).replace(',', ' ').replace('.', ',').replace(' ', '.') }}**

| Numero Documento | Quantidade | Custo Unitário | Custo Total | Objeto |
| ------- | --------------: | ----------: | ---------------: | --------------------- |
{% for produto in produtosDepositosNormalizados %}
| {{ produto['docnum'] }} | {{ produto['quantidade'] }} | {{ '{:,.3f}'.format(produto['preço unitario']).replace(',', ' ').replace('.', ',').replace(' ', '.') }} | {{ '{:,.3f}'.format(produto['preço total']).replace(',', ' ').replace('.', ',').replace(' ', '.') }} | {{produto['documento']}} |
{% endfor %}
</spiffworkflow:instructionsForEndUser>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_0kxg7eo</bpmn:incoming>
      <bpmn:outgoing>Flow_1n8yish</bpmn:outgoing>
    </bpmn:manualTask>
    <bpmn:sequenceFlow id="Flow_1n8yish" sourceRef="EntradasItens" targetRef="BuscaMovimentosSaidaSAP" />
    <bpmn:subProcess id="Activity_1d1r8sl">
      <bpmn:extensionElements>
        <spiffworkflow:postScript>produtosDepositosNormalizados.append(x)

del(x)</spiffworkflow:postScript>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_1yez69d</bpmn:incoming>
      <bpmn:outgoing>Flow_0kxg7eo</bpmn:outgoing>
      <bpmn:multiInstanceLoopCharacteristics isSequential="true" spiffworkflow:scriptsOnInstances="true">
        <bpmn:loopDataInputRef>produtosDepositos</bpmn:loopDataInputRef>
        <bpmn:loopDataOutputRef>produtosDepositos</bpmn:loopDataOutputRef>
        <bpmn:inputDataItem id="x" name="x" />
      </bpmn:multiInstanceLoopCharacteristics>
      <bpmn:startEvent id="Event_117o128">
        <bpmn:outgoing>Flow_1l99k7c</bpmn:outgoing>
      </bpmn:startEvent>
      <bpmn:businessRuleTask id="ConversorUnidadeMedida" name="Conversor de Unidade de Medida">
        <bpmn:extensionElements>
          <spiffworkflow:preScript>unidadeDocumento = x['unidade documento']
unidadeEstoque = x['unidade estoque']</spiffworkflow:preScript>
          <spiffworkflow:postScript>multiplicador = multiplicador

</spiffworkflow:postScript>
          <spiffworkflow:calledDecisionId>decision_1</spiffworkflow:calledDecisionId>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_1l99k7c</bpmn:incoming>
        <bpmn:outgoing>Flow_0f953hs</bpmn:outgoing>
      </bpmn:businessRuleTask>
      <bpmn:sequenceFlow id="Flow_1l99k7c" sourceRef="Event_117o128" targetRef="ConversorUnidadeMedida" />
      <bpmn:sequenceFlow id="Flow_0f953hs" sourceRef="ConversorUnidadeMedida" targetRef="DEPARAObjetoMarketing" />
      <bpmn:scriptTask id="NormalizandoEstoque" name="Normalizando Estoque">
        <bpmn:incoming>Flow_1xlv71s</bpmn:incoming>
        <bpmn:outgoing>Flow_14z5yhx</bpmn:outgoing>
        <bpmn:script>quantidadeEstoqueNormalizada = multiplicador * float(x["quantidade"].replace(",", "."))
precoProdutoNormalizado = float(x["preço unitario"].replace(",", ".")) / multiplicador

precoTotalNormalizado = precoProdutoNormalizado * quantidadeEstoqueNormalizada

x['quantidade'] = quantidadeEstoqueNormalizada
x['preço unitario'] = precoProdutoNormalizado
x['preço total'] = precoTotalNormalizado

del(quantidadeEstoqueNormalizada)
del(precoProdutoNormalizado)
del(precoTotalNormalizado)

x['documento'] = nomeObjeto</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:endEvent id="Event_1dydh6d">
        <bpmn:incoming>Flow_14z5yhx</bpmn:incoming>
      </bpmn:endEvent>
      <bpmn:sequenceFlow id="Flow_14z5yhx" sourceRef="NormalizandoEstoque" targetRef="Event_1dydh6d" />
      <bpmn:sequenceFlow id="Flow_1xlv71s" sourceRef="DEPARAObjetoMarketing" targetRef="NormalizandoEstoque" />
      <bpmn:businessRuleTask id="DEPARAObjetoMarketing" name="DE PARA Objeto Marketing">
        <bpmn:extensionElements>
          <spiffworkflow:calledDecisionId>ObjetoMarketing</spiffworkflow:calledDecisionId>
          <spiffworkflow:preScript>objeto = x['documento']</spiffworkflow:preScript>
          <spiffworkflow:postScript />
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_0f953hs</bpmn:incoming>
        <bpmn:outgoing>Flow_1xlv71s</bpmn:outgoing>
      </bpmn:businessRuleTask>
    </bpmn:subProcess>
    <bpmn:sequenceFlow id="Flow_12354sq" sourceRef="BuscaProdutosPorDepositoSAP" targetRef="Gateway_0mqija0" />
    <bpmn:sequenceFlow id="Flow_0kxg7eo" sourceRef="Activity_1d1r8sl" targetRef="EntradasItens" />
    <bpmn:sequenceFlow id="Flow_13pu6hq" sourceRef="Activity_00bh8bd" targetRef="BuscaProdutosPorDepositoSAP" />
    <bpmn:userTask id="Activity_00bh8bd" name="Selecionar Produto e Deposito">
      <bpmn:extensionElements>
        <spiffworkflow:properties>
          <spiffworkflow:property name="formJsonSchemaFilename" value="selecionar-produto-deposito-schema.json" />
          <spiffworkflow:property name="formUiSchemaFilename" value="selecionar-produto-deposito-uischema.json" />
        </spiffworkflow:properties>
        <spiffworkflow:preScript>from connectordb.hana import Hana

baseSap = get_secret('baseSap')

connection = {
    "address": "172.20.1.4",
    "port": "30015",
    "user": "SYSTEM",
    "password": "9Ab63^Op33"
}

query_produtos = f"""
                    SELECT DISTINCT 
                        t0."ItemCode" ,
                        t1."ItemName" 
                    FROM 
                        {baseSap}.OITW t0
                        INNER JOIN {baseSap}.OITM t1 ON t1."ItemCode" = t0."ItemCode"
                    WHERE t0."AvgPrice" &gt; 0
                    ORDER BY t0."ItemCode"
                """

query_depositos = f"""
                    SELECT DISTINCT 
                        t0."WhsCode" ,
                        CAST(t1."WhsName" AS VARCHAR(50)) AS "whsname"
                    FROM 
                        {baseSap}.OITW t0
                        INNER JOIN {baseSap}.OWHS t1 ON t1."WhsCode" = t0."WhsCode"
                    WHERE t0."AvgPrice" &gt; 0
                    ORDER BY t0."WhsCode"
                """

consulta_produtos = Hana(connection).selectDb(query_produtos)
consulta_depositos = Hana(connection).selectDb(query_depositos)

del(query_depositos)
del(query_produtos)
del(baseSap)
del(connection)


produtosList = []
for produto in consulta_produtos:
    produtosList.append(
        {
            "value" : produto['itemcode'] ,
            "label" : produto['itemcode'] + ' - ' produto['itemname']
        }
    )

depositosList = []
for deposito in consulta_depositos:
    depositosList.append(
        {
            "value" : deposito['whscode'] ,
            "label" : deposito['whscode'] + ' - ' deposito['whsname']
        }
    )
</spiffworkflow:preScript>
        <spiffworkflow:instructionsForEndUser />
        <spiffworkflow:postScript>del(depositosList)</spiffworkflow:postScript>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_17db3yp</bpmn:incoming>
      <bpmn:incoming>Flow_0ho3zz6</bpmn:incoming>
      <bpmn:outgoing>Flow_13pu6hq</bpmn:outgoing>
      <bpmn:property id="Property_1fajqs9" name="__targetRef_placeholder" />
      <bpmn:dataInputAssociation id="DataInputAssociation_04skp3m">
        <bpmn:sourceRef>DataStoreReference_1y3s6q4</bpmn:sourceRef>
        <bpmn:targetRef>Property_1fajqs9</bpmn:targetRef>
      </bpmn:dataInputAssociation>
    </bpmn:userTask>
    <bpmn:dataStoreReference id="DataStoreReference_1y3s6q4" name="Depositos" dataStoreRef="depositos" type="json" />
    <bpmn:exclusiveGateway id="Gateway_0mqija0" default="Flow_1yez69d">
      <bpmn:incoming>Flow_12354sq</bpmn:incoming>
      <bpmn:outgoing>Flow_1yez69d</bpmn:outgoing>
      <bpmn:outgoing>Flow_1462x9u</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:sequenceFlow id="Flow_1yez69d" sourceRef="Gateway_0mqija0" targetRef="Activity_1d1r8sl">
      <bpmn:conditionExpression>produtosDepositos != []</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="Flow_1462x9u" sourceRef="Gateway_0mqija0" targetRef="MovimentoEntradaNaoEncontrado">
      <bpmn:conditionExpression>produtosDepositos == []</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:exclusiveGateway id="Gateway_0zhxafw" default="Flow_0ho3zz6">
      <bpmn:incoming>Flow_0n3n3cb</bpmn:incoming>
      <bpmn:outgoing>Flow_0ho3zz6</bpmn:outgoing>
      <bpmn:outgoing>Flow_0gpghte</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:sequenceFlow id="Flow_0n3n3cb" sourceRef="MovimentoEntradaNaoEncontrado" targetRef="Gateway_0zhxafw" />
    <bpmn:sequenceFlow id="Flow_0ho3zz6" sourceRef="Gateway_0zhxafw" targetRef="Activity_00bh8bd">
      <bpmn:conditionExpression>novaBusca == True</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:userTask id="MovimentoEntradaNaoEncontrado" name="Movimento de Entrada não encontrado">
      <bpmn:extensionElements>
        <spiffworkflow:instructionsForEndUser>## &lt;span style="font-weight: bold; color: red;"&gt;Nenhum movimento de entrada encontrado para o &lt;br&gt;Produto &lt;span style="color: black;"&gt; **{{produto}}**&lt;/span&gt; e depósito &lt;span style="color: black;"&gt;**{{deposito}}**&lt;/span&gt; !!&lt;/span&gt;

</spiffworkflow:instructionsForEndUser>
        <spiffworkflow:properties>
          <spiffworkflow:property name="formJsonSchemaFilename" value="selecionar-novos-parametros-schema.json" />
          <spiffworkflow:property name="formUiSchemaFilename" value="selecionar-novos-parametros-uischema.json" />
        </spiffworkflow:properties>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_1462x9u</bpmn:incoming>
      <bpmn:outgoing>Flow_0n3n3cb</bpmn:outgoing>
    </bpmn:userTask>
    <bpmn:scriptTask id="BuscaMovimentosSaidaSAP" name="Busca Movimentos de Saida no SAP">
      <bpmn:extensionElements>
        <spiffworkflow:instructionsForEndUser />
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_1n8yish</bpmn:incoming>
      <bpmn:outgoing>Flow_0ubbx6l</bpmn:outgoing>
      <bpmn:script>from connectordb.hana import Hana

baseSap = get_secret('baseSap')

produtosDepositosSaidaNormalizados = []

connection = {
    "address": "172.20.1.4",
    "port": "30015",
    "user": "SYSTEM",
    "password": "9Ab63^Op33"
}

query_saida_mercadoria = f"""
    SELECT 
        t0."ItemCode" || ' - ' || t0."ItemName" AS "Produto" , 
        CAST(t2."Price" AS VARCHAR(50)) AS "Preço Unitario" , 
        CAST(t2."Quantity" AS VARCHAR(50)) AS "Quantidade" ,
        CAST(t2."LineTotal" AS VARCHAR(50)) AS "Preço Total" ,
        CAST(t2."StockPrice" AS VARCHAR(50)) AS "Preço Unitario Estoque" ,
        t2."unitMsr" AS "Unidade Documento" , 
        t0."InvntryUom" AS "Unidade Estoque" , 
        CAST(t3."DocNum" AS VARCHAR(50)) AS "DocNum" ,
        CAST(t3."ObjType" AS VARCHAR(50)) AS "Documento"
    FROM {baseSap}.OITM t0
    INNER JOIN {baseSap}.OITW t1 ON t1."ItemCode" = t0."ItemCode"
    INNER JOIN {baseSap}.IGE1 t2 ON t2."ItemCode" = t0."ItemCode" AND t2."WhsCode" = '{deposito}'
    INNER JOIN {baseSap}.OIGE t3 ON t3."DocEntry" = t2."DocEntry" AND t3.CANCELED = 'N'
    WHERE t0."ItemCode" = '{produto}' AND t1."WhsCode" = '{deposito}'
    ORDER BY t3."DocEntry"
"""

# Executar as consultas
consulta_saida_mercadoria = Hana(connection).selectDb(query_saida_mercadoria)

# Combinar os resultados
produtosDepositosSaida = consulta_saida_mercadoria

del(connection)
del(consulta_saida_mercadoria)
del(baseSap)</bpmn:script>
    </bpmn:scriptTask>
    <bpmn:sequenceFlow id="Flow_0ubbx6l" sourceRef="BuscaMovimentosSaidaSAP" targetRef="Gateway_0mb0jym" />
    <bpmn:subProcess id="Activity_0v6aoxc">
      <bpmn:extensionElements>
        <spiffworkflow:postScript>produtosDepositosSaidaNormalizados.append(y)

del(y)</spiffworkflow:postScript>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_1vgj80b</bpmn:incoming>
      <bpmn:outgoing>Flow_0cx01to</bpmn:outgoing>
      <bpmn:multiInstanceLoopCharacteristics isSequential="true" spiffworkflow:scriptsOnInstances="true">
        <bpmn:loopDataInputRef>produtosDepositosSaida</bpmn:loopDataInputRef>
        <bpmn:loopDataOutputRef>produtosDepositosSaida</bpmn:loopDataOutputRef>
        <bpmn:inputDataItem id="y" name="y" />
      </bpmn:multiInstanceLoopCharacteristics>
      <bpmn:startEvent id="Event_09gfe3l">
        <bpmn:outgoing>Flow_10pu0iu</bpmn:outgoing>
      </bpmn:startEvent>
      <bpmn:businessRuleTask id="Activity_1ah3spi" name="Conversor de Unidade de Medida">
        <bpmn:extensionElements>
          <spiffworkflow:preScript>unidadeDocumento = y['unidade documento']
unidadeEstoque = y['unidade estoque']</spiffworkflow:preScript>
          <spiffworkflow:postScript>multiplicador = multiplicador

</spiffworkflow:postScript>
          <spiffworkflow:calledDecisionId>decision_1</spiffworkflow:calledDecisionId>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_10pu0iu</bpmn:incoming>
        <bpmn:outgoing>Flow_1h9w6p8</bpmn:outgoing>
      </bpmn:businessRuleTask>
      <bpmn:scriptTask id="Activity_1fcb378" name="Normalizando Estoque">
        <bpmn:incoming>Flow_1lutyyg</bpmn:incoming>
        <bpmn:outgoing>Flow_0d0tcve</bpmn:outgoing>
        <bpmn:script>quantidadeEstoqueNormalizada = multiplicador * float(y["quantidade"].replace(",", "."))
precoProdutoNormalizado = float(y["preço unitario"].replace(",", ".")) / multiplicador

precoTotalNormalizado = precoProdutoNormalizado * quantidadeEstoqueNormalizada
precoUnitarioEstoqueNormalizado = float(y['preço unitario estoque'].replace(",", "."))

y['quantidade'] = quantidadeEstoqueNormalizada
y['preço unitario'] = precoProdutoNormalizado
y['preço total'] = precoTotalNormalizado
y['preço unitario estoque'] = precoUnitarioEstoqueNormalizado
y['preço total estoque'] = quantidadeEstoqueNormalizada * precoUnitarioEstoqueNormalizado
y['preço total custo medio'] = quantidadeEstoqueNormalizada * custo_medio_unitario


del(quantidadeEstoqueNormalizada)
del(precoProdutoNormalizado)
del(precoTotalNormalizado)
del(precoUnitarioEstoqueNormalizado)

y['documento'] = nomeObjeto</bpmn:script>
      </bpmn:scriptTask>
      <bpmn:endEvent id="Event_18fxrzx">
        <bpmn:incoming>Flow_0d0tcve</bpmn:incoming>
      </bpmn:endEvent>
      <bpmn:businessRuleTask id="Activity_0bdd7ta" name="DE PARA Objeto Marketing">
        <bpmn:extensionElements>
          <spiffworkflow:calledDecisionId>ObjetoMarketing</spiffworkflow:calledDecisionId>
          <spiffworkflow:preScript>objeto = y['documento']</spiffworkflow:preScript>
          <spiffworkflow:postScript />
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_1h9w6p8</bpmn:incoming>
        <bpmn:outgoing>Flow_1lutyyg</bpmn:outgoing>
      </bpmn:businessRuleTask>
      <bpmn:sequenceFlow id="Flow_10pu0iu" sourceRef="Event_09gfe3l" targetRef="Activity_1ah3spi" />
      <bpmn:sequenceFlow id="Flow_1h9w6p8" sourceRef="Activity_1ah3spi" targetRef="Activity_0bdd7ta" />
      <bpmn:sequenceFlow id="Flow_1lutyyg" sourceRef="Activity_0bdd7ta" targetRef="Activity_1fcb378" />
      <bpmn:sequenceFlow id="Flow_0d0tcve" sourceRef="Activity_1fcb378" targetRef="Event_18fxrzx" />
    </bpmn:subProcess>
    <bpmn:sequenceFlow id="Flow_0cx01to" sourceRef="Activity_0v6aoxc" targetRef="SaidaItens" />
    <bpmn:manualTask id="SaidaItens" name="Saida dos Itens">
      <bpmn:extensionElements>
        <spiffworkflow:properties>
          <spiffworkflow:property name="formJsonSchemaFilename" value="" />
          <spiffworkflow:property name="formUiSchemaFilename" value="" />
        </spiffworkflow:properties>
        <spiffworkflow:preScript>del(produtosDepositos)
del(produtosDepositosSaida)

# Inicialize as variáveis para calcular o custo médio unitário
total_preco_unitario_saida = 0
total_quantidade_saida = 0
total_preco_unitario_estoque_saida = 0
total_preco_unitario_medio_estoque_saida = 0

# Verifique se produtosDespositos é uma lista
if isinstance(produtosDepositosSaidaNormalizados, list):
    for produtoAux in produtosDepositosSaidaNormalizados:
        # Verifique se o produto contém as chaves necessárias
        if "preço unitario" in produtoAux and "quantidade" in produtoAux:
            preco_unitario_saida = float(produtoAux["preço unitario"])
            quantidade_saida = float(produtoAux["quantidade"])
            total_preco_unitario_saida += preco_unitario_saida * quantidade_saida
            total_quantidade_saida += quantidade_saida

            preco_unitario_estoque_saida = float(produtoAux["preço unitario estoque"])
            total_preco_unitario_estoque_saida += preco_unitario_estoque_saida * quantidade_saida
            
            total_preco_unitario_medio_estoque_saida += custo_medio_unitario * quantidade_saida
else:
    print("Erro: 'produtosDepositosSaidaNormalizados' não é uma lista.")

# Verifique se houve algum produto na lista
if total_quantidade_saida != 0:
    custo_medio_unitario_saida = total_preco_unitario_saida / total_quantidade_saida
    custo_medio_unitario_estoque_saida = total_preco_unitario_estoque_saida / total_quantidade_saida
    custo_medio_unitario_medio_estoque_saida = total_preco_unitario_medio_estoque_saida / total_quantidade_saida
    print("Custo médio unitário:", custo_medio_unitario_saida)
else:
    print("Não foi possível calcular o custo médio unitário. Total de quantidade é zero.")
</spiffworkflow:preScript>
        <spiffworkflow:postScript />
        <spiffworkflow:instructionsForEndUser>
Produto: **{{ produtoAux['produto'] }}**  &lt;br&gt;
Deposito: **{{ deposito}}** &lt;br&gt;
UM: **{{produtoAux['unidade estoque']}}** &lt;br&gt;

Quantidade Total: **{{ '{:,.3f}'.format(total_quantidade_saida).replace(',', ' ').replace('.', ',').replace(' ', '.')}}** &lt;br&gt;
Custo Médio Unitário Documento: **{{ '{:,.3f}'.format(custo_medio_unitario_saida).replace(',', ' ').replace('.', ',').replace(' ', '.') }}** &lt;br&gt;
Custo Total Documento: **{{ '{:,.3f}'.format(total_preco_unitario_saida).replace(',', ' ').replace('.', ',').replace(' ', '.') }}**  &lt;br&gt;

Custo Médio Unitário Estoque: **{{ '{:,.3f}'.format(custo_medio_unitario_estoque_saida).replace(',', ' ').replace('.', ',').replace(' ', '.') }}** &lt;br&gt;
Custo Total Estoque: **{{ '{:,.3f}'.format(total_preco_unitario_estoque_saida).replace(',', ' ').replace('.', ',').replace(' ', '.') }}**&lt;br&gt;

Custo Médio Unitário: **{{ '{:,.3f}'.format(custo_medio_unitario_medio_estoque_saida).replace(',', ' ').replace('.', ',').replace(' ', '.') }}** &lt;br&gt;
Custo Total: **{{ '{:,.3f}'.format(total_preco_unitario_medio_estoque_saida).replace(',', ' ').replace('.', ',').replace(' ', '.') }}**

| Numero Documento | Objeto | Quantidade  |Custo Unitário | Custo Total | Custo Unitario Estoque | Custo Total Estoque | Custo Total Medio |
| ------- | -------------- | ----------: | ---------------: | ---------------------: | -------------: | ---------------: | -----------: |
{% for produto in produtosDepositosSaidaNormalizados%}
| {{ produto['docnum'] }} | {{produto['documento']}} | {{ produto['quantidade'] }} | {{ '{:,.3f}'.format(produto['preço unitario']).replace(',', ' ').replace('.', ',').replace(' ', '.') }}| {{ '{:,.3f}'.format(produto['preço total']).replace(',', ' ').replace('.', ',').replace(' ', '.') }}  | {{ '{:,.3f}'.format(produto['preço unitario estoque']).replace(',', ' ').replace('.', ',').replace(' ', '.') }} | {{ '{:,.3f}'.format(produto['preço total estoque']).replace(',', ' ').replace('.', ',').replace(' ', '.') }} | {{ '{:,.3f}'.format(produto['preço total custo medio']).replace(',', ' ').replace('.', ',').replace(' ', '.') }} |
{% endfor %}
</spiffworkflow:instructionsForEndUser>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_0cx01to</bpmn:incoming>
      <bpmn:outgoing>Flow_00do74e</bpmn:outgoing>
    </bpmn:manualTask>
    <bpmn:sequenceFlow id="Flow_00do74e" sourceRef="SaidaItens" targetRef="EndEvent_1" />
    <bpmn:exclusiveGateway id="Gateway_0mb0jym" default="Flow_1vgj80b">
      <bpmn:incoming>Flow_0ubbx6l</bpmn:incoming>
      <bpmn:outgoing>Flow_1vgj80b</bpmn:outgoing>
      <bpmn:outgoing>Flow_0to091p</bpmn:outgoing>
    </bpmn:exclusiveGateway>
    <bpmn:sequenceFlow id="Flow_1vgj80b" sourceRef="Gateway_0mb0jym" targetRef="Activity_0v6aoxc">
      <bpmn:conditionExpression>produtosDepositosSaida != []</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="Flow_0to091p" sourceRef="Gateway_0mb0jym" targetRef="MovimentoSaidaEncontrado">
      <bpmn:conditionExpression>produtosDepositosSaida == []</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:endEvent id="Event_1n8n9v9">
      <bpmn:incoming>Flow_0gpghte</bpmn:incoming>
      <bpmn:incoming>Flow_1dp3683</bpmn:incoming>
    </bpmn:endEvent>
    <bpmn:sequenceFlow id="Flow_0gpghte" sourceRef="Gateway_0zhxafw" targetRef="Event_1n8n9v9">
      <bpmn:conditionExpression>novaBusca == False</bpmn:conditionExpression>
    </bpmn:sequenceFlow>
    <bpmn:sequenceFlow id="Flow_1dp3683" sourceRef="MovimentoSaidaEncontrado" targetRef="Event_1n8n9v9" />
    <bpmn:manualTask id="MovimentoSaidaEncontrado" name="Movimento de Saída não Encontrado">
      <bpmn:extensionElements>
        <spiffworkflow:instructionsForEndUser>## &lt;span style="font-weight: bold; color: red;"&gt;Nenhum movimento de Saída encontrado para o &lt;br&gt;Produto &lt;span style="color: black;"&gt; **{{produto}}**&lt;/span&gt; e depósito &lt;span style="color: black;"&gt;**{{deposito}}**&lt;/span&gt; !!&lt;/span&gt;
</spiffworkflow:instructionsForEndUser>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_0to091p</bpmn:incoming>
      <bpmn:outgoing>Flow_1dp3683</bpmn:outgoing>
    </bpmn:manualTask>
  </bpmn:process>
  <bpmn:dataStore id="depositos" name="JSONDataStore" />
  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="Process_ajuste_custo_sap_5dnpvbm">
      <bpmndi:BPMNShape id="_BPMNShape_StartEvent_2" bpmnElement="StartEvent_1">
        <dc:Bounds x="-478" y="159" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_14za570_di" bpmnElement="EndEvent_1">
        <dc:Bounds x="2012" y="159" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0m8n14o_di" bpmnElement="BuscaProdutosPorDepositoSAP">
        <dc:Bounds x="-10" y="137" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1oot5j9_di" bpmnElement="EntradasItens">
        <dc:Bounds x="830" y="137" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1d1r8sl_di" bpmnElement="Activity_1d1r8sl" isExpanded="true">
        <dc:Bounds x="220" y="77" width="550" height="200" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_117o128_di" bpmnElement="Event_117o128">
        <dc:Bounds x="242" y="159" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0s2c0do_di" bpmnElement="ConversorUnidadeMedida">
        <dc:Bounds x="310" y="137" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_01u9h9m_di" bpmnElement="NormalizandoEstoque">
        <dc:Bounds x="570" y="137" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_1dydh6d_di" bpmnElement="Event_1dydh6d">
        <dc:Bounds x="712" y="159" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0dkscvs_di" bpmnElement="DEPARAObjetoMarketing">
        <dc:Bounds x="440" y="137" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="Flow_1l99k7c_di" bpmnElement="Flow_1l99k7c">
        <di:waypoint x="278" y="177" />
        <di:waypoint x="310" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0f953hs_di" bpmnElement="Flow_0f953hs">
        <di:waypoint x="410" y="177" />
        <di:waypoint x="440" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_14z5yhx_di" bpmnElement="Flow_14z5yhx">
        <di:waypoint x="670" y="177" />
        <di:waypoint x="712" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1xlv71s_di" bpmnElement="Flow_1xlv71s">
        <di:waypoint x="540" y="177" />
        <di:waypoint x="570" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="Activity_122wunj_di" bpmnElement="Activity_00bh8bd">
        <dc:Bounds x="-150" y="137" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="DataStoreReference_1y3s6q4_di" bpmnElement="DataStoreReference_1y3s6q4">
        <dc:Bounds x="-125" y="-75" width="50" height="50" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x="-125" y="-105" width="50" height="14" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_0mqija0_di" bpmnElement="Gateway_0mqija0" isMarkerVisible="true">
        <dc:Bounds x="125" y="152" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1gw7jjv" bpmnElement="Gateway_0zhxafw" isMarkerVisible="true">
        <dc:Bounds x="15" y="365" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0tm9ngj_di" bpmnElement="MovimentoEntradaNaoEncontrado">
        <dc:Bounds x="-10" y="250" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0pzmp4f" bpmnElement="BuscaMovimentosSaidaSAP">
        <dc:Bounds x="990" y="137" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0nepfng" bpmnElement="Activity_0v6aoxc" isExpanded="true">
        <dc:Bounds x="1230" y="77" width="550" height="200" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_19bwiw7" bpmnElement="Event_09gfe3l">
        <dc:Bounds x="1252" y="159" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_1v0t226" bpmnElement="Activity_1ah3spi">
        <dc:Bounds x="1320" y="137" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0s2hj59" bpmnElement="Activity_1fcb378">
        <dc:Bounds x="1580" y="137" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_13s3rvv" bpmnElement="Event_18fxrzx">
        <dc:Bounds x="1722" y="159" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="BPMNShape_0l7a7om" bpmnElement="Activity_0bdd7ta">
        <dc:Bounds x="1450" y="137" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="BPMNEdge_1kqtgak" bpmnElement="Flow_10pu0iu">
        <di:waypoint x="1288" y="177" />
        <di:waypoint x="1320" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_18hck36" bpmnElement="Flow_1h9w6p8">
        <di:waypoint x="1420" y="177" />
        <di:waypoint x="1450" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_1giw19v" bpmnElement="Flow_1lutyyg">
        <di:waypoint x="1550" y="177" />
        <di:waypoint x="1580" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="BPMNEdge_0p4illk" bpmnElement="Flow_0d0tcve">
        <di:waypoint x="1680" y="177" />
        <di:waypoint x="1722" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="BPMNShape_006mvds" bpmnElement="SaidaItens">
        <dc:Bounds x="1860" y="137" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Gateway_0mb0jym_di" bpmnElement="Gateway_0mb0jym" isMarkerVisible="true">
        <dc:Bounds x="1135" y="152" width="50" height="50" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_1n8n9v9_di" bpmnElement="Event_1n8n9v9">
        <dc:Bounds x="1142" y="372" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0jzl9cj_di" bpmnElement="MovimentoSaidaEncontrado">
        <dc:Bounds x="1110" y="250" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="Flow_17db3yp_di" bpmnElement="Flow_17db3yp">
        <di:waypoint x="-442" y="177" />
        <di:waypoint x="-150" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1n8yish_di" bpmnElement="Flow_1n8yish">
        <di:waypoint x="930" y="177" />
        <di:waypoint x="990" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_12354sq_di" bpmnElement="Flow_12354sq">
        <di:waypoint x="90" y="177" />
        <di:waypoint x="125" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0kxg7eo_di" bpmnElement="Flow_0kxg7eo">
        <di:waypoint x="770" y="177" />
        <di:waypoint x="830" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_13pu6hq_di" bpmnElement="Flow_13pu6hq">
        <di:waypoint x="-50" y="177" />
        <di:waypoint x="-10" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="DataInputAssociation_04skp3m_di" bpmnElement="DataInputAssociation_04skp3m">
        <di:waypoint x="-100" y="-25" />
        <di:waypoint x="-100" y="137" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1yez69d_di" bpmnElement="Flow_1yez69d">
        <di:waypoint x="175" y="177" />
        <di:waypoint x="220" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1462x9u_di" bpmnElement="Flow_1462x9u">
        <di:waypoint x="150" y="202" />
        <di:waypoint x="150" y="290" />
        <di:waypoint x="90" y="290" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0n3n3cb_di" bpmnElement="Flow_0n3n3cb">
        <di:waypoint x="40" y="330" />
        <di:waypoint x="40" y="365" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0ho3zz6_di" bpmnElement="Flow_0ho3zz6">
        <di:waypoint x="15" y="390" />
        <di:waypoint x="-100" y="390" />
        <di:waypoint x="-100" y="217" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0ubbx6l_di" bpmnElement="Flow_0ubbx6l">
        <di:waypoint x="1090" y="177" />
        <di:waypoint x="1135" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0cx01to_di" bpmnElement="Flow_0cx01to">
        <di:waypoint x="1780" y="177" />
        <di:waypoint x="1860" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_00do74e_di" bpmnElement="Flow_00do74e">
        <di:waypoint x="1960" y="177" />
        <di:waypoint x="2012" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1vgj80b_di" bpmnElement="Flow_1vgj80b">
        <di:waypoint x="1185" y="177" />
        <di:waypoint x="1230" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0to091p_di" bpmnElement="Flow_0to091p">
        <di:waypoint x="1160" y="202" />
        <di:waypoint x="1160" y="250" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0gpghte_di" bpmnElement="Flow_0gpghte">
        <di:waypoint x="65" y="390" />
        <di:waypoint x="1142" y="390" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1dp3683_di" bpmnElement="Flow_1dp3683">
        <di:waypoint x="1160" y="330" />
        <di:waypoint x="1160" y="372" />
      </bpmndi:BPMNEdge>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</bpmn:definitions>
