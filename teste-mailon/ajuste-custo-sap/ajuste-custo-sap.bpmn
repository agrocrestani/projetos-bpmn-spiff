<?xml version="1.0" encoding="UTF-8"?>
<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:spiffworkflow="http://spiffworkflow.org/bpmn/schema/1.0/core" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" id="Definitions_96f6665" targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="3.0.0-dev">
  <bpmn:process id="Process_ajuste_custo_sap_5dnpvbm" isExecutable="true">
    <bpmn:startEvent id="StartEvent_1">
      <bpmn:outgoing>Flow_17db3yp</bpmn:outgoing>
    </bpmn:startEvent>
    <bpmn:sequenceFlow id="Flow_17db3yp" sourceRef="StartEvent_1" targetRef="BuscaProdutosPorDepositoSAP" />
    <bpmn:endEvent id="EndEvent_1">
      <bpmn:incoming>Flow_1n8yish</bpmn:incoming>
    </bpmn:endEvent>
    <bpmn:scriptTask id="BuscaProdutosPorDepositoSAP" name="Busca Produtos por Deposito no SAP">
      <bpmn:extensionElements>
        <spiffworkflow:instructionsForEndUser>This is an example **Manual Task**. A **Manual Task** is designed to allow someone to complete a task outside of the system and then report back that it is complete. You can click the *Continue* button to proceed. When you are done running this process, you can edit the **Process Model** to include a:

 * **Script Task** - write a short snippet of python code to update some data
 *  **User Task** - generate a form that collects information from a user
 * **Service Task** - communicate with an external API to fetch or update some data.

You can also change the text you are reading here by updating the *Instructions* on this example manual task.</spiffworkflow:instructionsForEndUser>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_17db3yp</bpmn:incoming>
      <bpmn:outgoing>Flow_1k3e8mw</bpmn:outgoing>
      <bpmn:script>from connectordb.hana import Hana

baseSap = get_secret('baseSap')

connection = {
    "address": "172.20.1.4",
    "port": "30015",
    "user": "SYSTEM",
    "password": "9Ab63^Op33"
}

query = f"""
    SELECT 
        t0."ItemCode" || ' - ' || t0."ItemName" AS "Produto" , 
        CAST(t2."Price" AS VARCHAR(50)) AS "Preço Unitario" , 
        CAST(t2."Quantity" AS VARCHAR(50)) AS "Quantidade" ,
        CAST(t2."LineTotal" AS VARCHAR(50)) AS "Preço Total" ,
        t2."unitMsr" AS "Unidade Documento" , 
        t0."InvntryUom" AS "Unidade Estoque"
    FROM {baseSap}.OITM t0
    INNER JOIN {baseSap}.OITW t1 ON t1."ItemCode" = t0."ItemCode"
    INNER JOIN {baseSap}.PCH1 t2 ON t2."ItemCode" = t0."ItemCode" AND t2."WhsCode" = '03.FCOL'
    INNER JOIN {baseSap}.OPCH t3 ON t3."DocEntry" = t2."DocEntry" AND t3.CANCELED = 'N'
    WHERE t0."ItemCode" = '011021' AND t1."WhsCode" = '03.FCOL'
"""
produtosDespositos = Hana(connection).selectDb(query)
totalRegistros = len(produtosDespositos)
contador = 0

produtoDesposito = produtosDespositos[0]
</bpmn:script>
    </bpmn:scriptTask>
    <bpmn:manualTask id="Activity_0pxv5ok" name="Iterando">
      <bpmn:extensionElements>
        <spiffworkflow:properties>
          <spiffworkflow:property name="formJsonSchemaFilename" value="" />
          <spiffworkflow:property name="formUiSchemaFilename" value="" />
        </spiffworkflow:properties>
        <spiffworkflow:preScript># Inicialize as variáveis para calcular o custo médio unitário
total_preco_unitario = 0
total_quantidade = 0

# Verifique se produtosDespositos é uma lista
if isinstance(produtosDespositos, list):
    for produto in produtosDespositos:
        # Verifique se o produto contém as chaves necessárias
        if "preço unitario" in produto and "quantidade" in produto:
            preco_unitario = float(produto["preço unitario"].replace(",", "."))
            quantidade = float(produto["quantidade"].replace(",", "."))
            total_preco_unitario += preco_unitario * quantidade
            total_quantidade += quantidade
         
else:
    print("Erro: 'produtosDespositos' não é uma lista.")

# Verifique se houve algum produto na lista
if total_quantidade != 0:
    custo_medio_unitario = total_preco_unitario / total_quantidade
    print("Custo médio unitário:", custo_medio_unitario)
else:
    print("Não foi possível calcular o custo médio unitário. Total de quantidade é zero.")
</spiffworkflow:preScript>
        <spiffworkflow:postScript />
        <spiffworkflow:instructionsForEndUser>{{multiplicador}}
</spiffworkflow:instructionsForEndUser>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_1upg8gv</bpmn:incoming>
      <bpmn:outgoing>Flow_1n8yish</bpmn:outgoing>
    </bpmn:manualTask>
    <bpmn:sequenceFlow id="Flow_1k3e8mw" sourceRef="BuscaProdutosPorDepositoSAP" targetRef="Activity_1vcjpb9" />
    <bpmn:sequenceFlow id="Flow_1upg8gv" sourceRef="Activity_1vcjpb9" targetRef="Activity_0pxv5ok" />
    <bpmn:businessRuleTask id="Activity_1vcjpb9">
      <bpmn:extensionElements>
        <spiffworkflow:preScript>unidadeDocumento = produtoDeposito['unidade documento']
unidadeEstoque = produtoDeposito['unidade estoque']</spiffworkflow:preScript>
        <spiffworkflow:postScript>multiplicador = multiplicador</spiffworkflow:postScript>
        <spiffworkflow:calledDecisionId>decision_1</spiffworkflow:calledDecisionId>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_1k3e8mw</bpmn:incoming>
      <bpmn:outgoing>Flow_1upg8gv</bpmn:outgoing>
    </bpmn:businessRuleTask>
    <bpmn:sequenceFlow id="Flow_1n8yish" sourceRef="Activity_0pxv5ok" targetRef="EndEvent_1" />
  </bpmn:process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="Process_ajuste_custo_sap_5dnpvbm">
      <bpmndi:BPMNShape id="_BPMNShape_StartEvent_2" bpmnElement="StartEvent_1">
        <dc:Bounds x="92" y="159" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_14za570_di" bpmnElement="EndEvent_1">
        <dc:Bounds x="722" y="159" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0m8n14o_di" bpmnElement="BuscaProdutosPorDepositoSAP">
        <dc:Bounds x="210" y="137" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1oot5j9_di" bpmnElement="Activity_0pxv5ok">
        <dc:Bounds x="510" y="137" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0s2c0do_di" bpmnElement="Activity_1vcjpb9">
        <dc:Bounds x="360" y="137" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="Flow_17db3yp_di" bpmnElement="Flow_17db3yp">
        <di:waypoint x="128" y="177" />
        <di:waypoint x="210" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1k3e8mw_di" bpmnElement="Flow_1k3e8mw">
        <di:waypoint x="310" y="177" />
        <di:waypoint x="360" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1upg8gv_di" bpmnElement="Flow_1upg8gv">
        <di:waypoint x="460" y="177" />
        <di:waypoint x="510" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_1n8yish_di" bpmnElement="Flow_1n8yish">
        <di:waypoint x="610" y="177" />
        <di:waypoint x="722" y="177" />
      </bpmndi:BPMNEdge>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</bpmn:definitions>
