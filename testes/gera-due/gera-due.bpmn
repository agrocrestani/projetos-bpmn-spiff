<?xml version="1.0" encoding="UTF-8"?>
<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:spiffworkflow="http://spiffworkflow.org/bpmn/schema/1.0/core" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="Definitions_96f6665" targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="3.0.0-dev">
  <bpmn:collaboration id="Collaboration_1vfxrh7">
    <bpmn:participant id="Participant_0e01865" processRef="Process_gera_due_y29b60r" />
  </bpmn:collaboration>
  <bpmn:process id="Process_gera_due_y29b60r" isExecutable="true">
    <bpmn:laneSet id="LaneSet_0qp0zj5">
      <bpmn:lane id="Lane_1eavrp0">
        <bpmn:flowNodeRef>StartEvent_1</bpmn:flowNodeRef>
        <bpmn:flowNodeRef>Activity_0qpzdpu</bpmn:flowNodeRef>
        <bpmn:flowNodeRef>Activity_1tzzigu</bpmn:flowNodeRef>
      </bpmn:lane>
      <bpmn:lane id="Lane_1kh0cdj" name="comercialGraos">
        <bpmn:flowNodeRef>EndEvent_1</bpmn:flowNodeRef>
        <bpmn:flowNodeRef>Activity_0rp2yix</bpmn:flowNodeRef>
      </bpmn:lane>
    </bpmn:laneSet>
    <bpmn:startEvent id="StartEvent_1">
      <bpmn:outgoing>Flow_17db3yp</bpmn:outgoing>
    </bpmn:startEvent>
    <bpmn:serviceTask id="Activity_0qpzdpu" name="Busca novas DUEs">
      <bpmn:extensionElements>
        <spiffworkflow:instructionsForEndUser>This is an example **Manual Task**. A **Manual Task** is designed to allow someone to complete a task outside of the system and then report back that it is complete. You can click the *Continue* button to proceed. When you are done running this process, you can edit the **Process Model** to include a:

 * **Script Task** - write a short snippet of python code to update some data
 *  **User Task** - generate a form that collects information from a user
 * **Service Task** - communicate with an external API to fetch or update some data.

You can also change the text you are reading here by updating the *Instructions* on this example manual task.</spiffworkflow:instructionsForEndUser>
        <spiffworkflow:preScript>schema = {
  "sql": """
      SELECT distinct 
          itens_averbados -&gt; 0 -&gt;&gt; 'numero_due' numero_due,
          itens_averbados -&gt; 0 -&gt;&gt; 'data_embarque' data_embarque,
          itens_averbados -&gt; 0 -&gt;&gt; 'data_averbacao' data_averbacao,
          itens_averbados -&gt; 0 -&gt;&gt; 'motivo_alteracao' motivo_alteracao,
          '1' as natureza,
          null as nro_declaracao,
          null as tipo_documento,
          null as tipo_conhecimento,
          null as data_declaracao,
          null as pais_destino
      FROM 
          sap.due_eventos
      where
          itens_averbados -&gt; 0 -&gt;&gt; 'numero_due' not in (select "NumeroDeclaracao" from sap.due_dados)
    """,
  "fetch_results": True
}

# , '24BR0001110100','24BR0003384436'
#and itens_averbados -&gt; 0 -&gt;&gt; 'numero_due' in ('24BR0000782570')</spiffworkflow:preScript>
        <spiffworkflow:serviceTaskOperator id="postgres_v2/DoSQL" resultVariable="rsp">
          <spiffworkflow:parameters>
            <spiffworkflow:parameter id="database_connection_str" type="str" value="&#34;SPIFF_SECRET:postgres&#34;" />
            <spiffworkflow:parameter id="schema" type="any" value="schema" />
          </spiffworkflow:parameters>
        </spiffworkflow:serviceTaskOperator>
        <spiffworkflow:postScript>dues = [
    {
        "numero_due": r[0],
        "data_embarque": r[1],
        "data_averbacao": r[2],
        "motivo_alteracao": r[3],
        "natureza": "",
        "entidade":"",
        "nro_declaracao":"",
        "tipo_documento":"",
        "tipo_conhecimento":"",
        "data_declaracao":"",
        "pais_destino":""
    } for r in rsp['body']
]

del(rsp)</spiffworkflow:postScript>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_17db3yp</bpmn:incoming>
      <bpmn:outgoing>Flow_12pkbxb</bpmn:outgoing>
    </bpmn:serviceTask>
    <bpmn:scriptTask id="Activity_1tzzigu" name="Busca Tabelas">
      <bpmn:incoming>Flow_12pkbxb</bpmn:incoming>
      <bpmn:outgoing>Flow_0pk289d</bpmn:outgoing>
      <bpmn:script>from connectordb.hana import Hana

connection = {
    "address": "172.20.1.4",
    "port": "30015",
    "user": "SYSTEM",
    "password": "9Ab63^Op33"
}

qDecl = """
            SELECT TO_ALPHANUM(ID) ID, "Description" FROM SBO_CRESTANI_PRD."DeclaracaoExportacaoNatureza"
        """
nDeclaracao = json.loads(Hana(connection).selectDb(qDecl))
n_naturezaDeclaracao = []
for i in nDeclaracao:
    n_naturezaDeclaracao.append(
        {
            "value": i['id'],
            "label": i['description']
        }
    )
del(qDecl)
del(nDeclaracao)
del(i)

nTipo = 'SELECT TO_ALPHANUM(ID) ID, "Description" FROM SBO_CRESTANI_PRD."DeclaracaoExportacaoTipo"'
tDeclaracao = json.loads(Hana(connection).selectDb(nTipo))
n_tipoDeclaracao = []
for i in tDeclaracao:
    n_tipoDeclaracao.append(
        {
            "value": i['id'],
            "label": i['description']
        }
    )
del(nTipo)
del(tDeclaracao)
del(i)

nConh = 'SELECT TO_ALPHANUM(ID) ID, "Description" FROM SBO_CRESTANI_PRD."TipoConhecimento"'
tpConhecimento = json.loads(Hana(connection).selectDb(nConh))
n_tipoConhecimento = []
for i in tpConhecimento:
    n_tipoConhecimento.append(
    {
        "value": i['id'],
        "label": i['description']
    }
)
del(nConh)
del(tpConhecimento)
del(i)
del(connection)

</bpmn:script>
    </bpmn:scriptTask>
    <bpmn:sequenceFlow id="Flow_17db3yp" sourceRef="StartEvent_1" targetRef="Activity_0qpzdpu" />
    <bpmn:sequenceFlow id="Flow_12pkbxb" sourceRef="Activity_0qpzdpu" targetRef="Activity_1tzzigu" />
    <bpmn:sequenceFlow id="Flow_0pk289d" sourceRef="Activity_1tzzigu" targetRef="Activity_0rp2yix" />
    <bpmn:sequenceFlow id="Flow_19e22i2" sourceRef="Activity_0rp2yix" targetRef="EndEvent_1" />
    <bpmn:subProcess id="Activity_0rp2yix">
      <bpmn:extensionElements>
        <spiffworkflow:postScript />
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_0pk289d</bpmn:incoming>
      <bpmn:outgoing>Flow_19e22i2</bpmn:outgoing>
      <bpmn:multiInstanceLoopCharacteristics isSequential="true">
        <bpmn:loopDataInputRef>dues</bpmn:loopDataInputRef>
        <bpmn:loopDataOutputRef>dues</bpmn:loopDataOutputRef>
        <bpmn:inputDataItem id="due" name="due" />
      </bpmn:multiInstanceLoopCharacteristics>
      <bpmn:startEvent id="Event_0cxxyf3">
        <bpmn:outgoing>Flow_1d28xqv</bpmn:outgoing>
      </bpmn:startEvent>
      <bpmn:sequenceFlow id="Flow_1d28xqv" sourceRef="Event_0cxxyf3" targetRef="Activity_0rsc96w" />
      <bpmn:sequenceFlow id="Flow_0mvhmve" sourceRef="Activity_0rsc96w" targetRef="Activity_153jm8a" />
      <bpmn:endEvent id="Event_19qpy0q">
        <bpmn:incoming>Flow_0bqcq4s</bpmn:incoming>
      </bpmn:endEvent>
      <bpmn:sequenceFlow id="Flow_0bqcq4s" sourceRef="Activity_153jm8a" targetRef="Event_19qpy0q" />
      <bpmn:userTask id="Activity_0rsc96w" name="Complementa dados da DUE">
        <bpmn:extensionElements>
          <spiffworkflow:properties>
            <spiffworkflow:property name="formJsonSchemaFilename" value="complementa-due-schema.json" />
            <spiffworkflow:property name="formUiSchemaFilename" value="complementa-due-uischema.json" />
          </spiffworkflow:properties>
          <spiffworkflow:preScript>numero_due = due['numero_due']
data_embarque = due['data_embarque']
data_averbacao = due['data_averbacao']
motivo_alteracao = due['motivo_alteracao']
natureza = due['natureza']
nro_declaracao = due['nro_declaracao']
tipo_documento = due['tipo_documento']
tipo_conhecimento = due['tipo_conhecimento']
data_declaracao = ""
paisImportador = ""</spiffworkflow:preScript>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_1d28xqv</bpmn:incoming>
        <bpmn:outgoing>Flow_0mvhmve</bpmn:outgoing>
      </bpmn:userTask>
      <bpmn:serviceTask id="Activity_153jm8a" name="Insere no Banco de Dados">
        <bpmn:extensionElements>
          <spiffworkflow:properties>
            <spiffworkflow:property name="formJsonSchemaFilename" value="" />
            <spiffworkflow:property name="formUiSchemaFilename" value="" />
          </spiffworkflow:properties>
          <spiffworkflow:preScript>paisImportador = json.loads(paisImportador)
data_averbacao = data_averbacao[0:10]

schema = {
  "sql": f"""
      insert into sap.due_dados ("NumeroDeclaracao", "NumeroRegistro", "NumeroConhecimento",
                "PaisDestino", "DataDeclaracao", dataregistro, 
                dataconhecimento, dataaverbacao, naturezaid,
                tipoconhecimentoid,  tipodocumentoid)
            values ('{numero_due}', '{numero_due}', '{numero_due}',
                '{paisImportador['Code']}', '{dt_declaracao}', '{dt_declaracao}',
                '{dt_declaracao}', '{data_averbacao}', '{naturezaDeclaracao}',
                '{tipoConhecimento}',  '{tipoDeclaracao}')
    """,
  "fetch_results": False
}

# schema = {
#   "columns": [
#     "NumeroDeclaracao", 
#     "NumeroRegistro", 
#     "NumeroConhecimento",
#     "PaisDestino", 
#     "DataDeclaracao", 
#     "dataregistro", 
#     "dataconhecimento",
#     "dataaverbacao",
#     "naturezaid",
#     "tipoconhecimentoid",  
#     "tipodocumentoid"
#   ],
#   "values": [
#     str(numero_due), 
#     str(numero_due), 
#     str(numero_due),
#     str(paisImportador['Code']),
#     str(dt_declaracao), 
#     str(dt_declaracao),
#     str(dt_declaracao), 
#     str(data_averbacao), 
#     str(naturezaDeclaracao),
#     str(tipoConhecimento),
#     str(tipoDeclaracao)
#   ]
# }
</spiffworkflow:preScript>
          <spiffworkflow:serviceTaskOperator id="postgres_v2/DoSQL" resultVariable="rsp">
            <spiffworkflow:parameters>
              <spiffworkflow:parameter id="database_connection_str" type="str" value="&#34;SPIFF_SECRET:postgres&#34;" />
              <spiffworkflow:parameter id="schema" type="any" value="schema" />
            </spiffworkflow:parameters>
          </spiffworkflow:serviceTaskOperator>
        </bpmn:extensionElements>
        <bpmn:incoming>Flow_0mvhmve</bpmn:incoming>
        <bpmn:outgoing>Flow_0bqcq4s</bpmn:outgoing>
      </bpmn:serviceTask>
    </bpmn:subProcess>
    <bpmn:endEvent id="EndEvent_1">
      <bpmn:extensionElements>
        <spiffworkflow:instructionsForEndUser>The process instance completed successfully.</spiffworkflow:instructionsForEndUser>
      </bpmn:extensionElements>
      <bpmn:incoming>Flow_19e22i2</bpmn:incoming>
    </bpmn:endEvent>
  </bpmn:process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_1">
    <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="Collaboration_1vfxrh7">
      <bpmndi:BPMNShape id="Participant_0e01865_di" bpmnElement="Participant_0e01865" isHorizontal="true">
        <dc:Bounds x="20" y="30" width="1250" height="580" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Lane_1kh0cdj_di" bpmnElement="Lane_1kh0cdj" isHorizontal="true">
        <dc:Bounds x="50" y="324" width="1220" height="286" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Lane_1eavrp0_di" bpmnElement="Lane_1eavrp0" isHorizontal="true">
        <dc:Bounds x="50" y="30" width="1220" height="294" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="_BPMNShape_StartEvent_2" bpmnElement="StartEvent_1">
        <dc:Bounds x="72" y="159" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0kgs1zt_di" bpmnElement="Activity_0qpzdpu">
        <dc:Bounds x="200" y="137" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0nsjjj1_di" bpmnElement="Activity_1tzzigu">
        <dc:Bounds x="370" y="137" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_0rp2yix_di" bpmnElement="Activity_0rp2yix" isExpanded="true">
        <dc:Bounds x="600" y="370" width="540" height="200" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_0cxxyf3_di" bpmnElement="Event_0cxxyf3">
        <dc:Bounds x="640" y="452" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Event_19qpy0q_di" bpmnElement="Event_19qpy0q">
        <dc:Bounds x="1052" y="452" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1i31z27_di" bpmnElement="Activity_0rsc96w">
        <dc:Bounds x="730" y="430" width="100" height="80" />
        <bpmndi:BPMNLabel />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNShape id="Activity_1b2wz5f_di" bpmnElement="Activity_153jm8a">
        <dc:Bounds x="890" y="430" width="100" height="80" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="Flow_1d28xqv_di" bpmnElement="Flow_1d28xqv">
        <di:waypoint x="676" y="470" />
        <di:waypoint x="730" y="470" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0mvhmve_di" bpmnElement="Flow_0mvhmve">
        <di:waypoint x="830" y="470" />
        <di:waypoint x="890" y="470" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0bqcq4s_di" bpmnElement="Flow_0bqcq4s">
        <di:waypoint x="990" y="470" />
        <di:waypoint x="1052" y="470" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id="Event_14za570_di" bpmnElement="EndEvent_1">
        <dc:Bounds x="1212" y="452" width="36" height="36" />
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id="Flow_17db3yp_di" bpmnElement="Flow_17db3yp">
        <di:waypoint x="108" y="177" />
        <di:waypoint x="200" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_12pkbxb_di" bpmnElement="Flow_12pkbxb">
        <di:waypoint x="300" y="177" />
        <di:waypoint x="370" y="177" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_0pk289d_di" bpmnElement="Flow_0pk289d">
        <di:waypoint x="470" y="177" />
        <di:waypoint x="530" y="177" />
        <di:waypoint x="530" y="470" />
        <di:waypoint x="600" y="470" />
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNEdge id="Flow_19e22i2_di" bpmnElement="Flow_19e22i2">
        <di:waypoint x="1140" y="470" />
        <di:waypoint x="1212" y="470" />
      </bpmndi:BPMNEdge>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</bpmn:definitions>
